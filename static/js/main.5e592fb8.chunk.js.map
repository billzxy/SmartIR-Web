{"version":3,"sources":["assets/viewPano/resource/pano-20190724143458-mx.png","assets/viewPano/resource/pano-20190724143833-mx.png","assets/viewPano/resource/pano-20190724145944-mx.png","assets/viewPano/resource/pano-20190724150711-mx.png","assets/viewPano/resource/pano-20190724151238-mx.png","assets/viewPano/resource/pano-20190724151553-mx.png","assets/viewPano/resource/pano-demo.png","assets/viewPano/resource/wall.jpg","components/layout.tsx","api/index.ts","maps.tsx","geo.tsx","shapes.tsx","components/spinner.tsx","pano.tsx","App.tsx","index.tsx","assets/viewPano/resource sync /^/.//.*$"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Header","_templateObject2","Content","_templateObject3","NAV_BAR_HEIGHT","getDataFromJSONArray","data","query","id","i","length","resultArr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","param","value","push","err","return","result","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getTwoNeighbors","nhood","hood","mockedNeighbors","apis","getPanoFileNameById","Promise","resolve","mockedPanos","getPanoCoordById","getAllPanoIdAndCoord","getPanoAllAttrById","getNeighborsById","neighborhood","StyledMap","Map","maps_templateObject","maps_templateObject2","MapContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bounds","google","maps","LatLngBounds","state","showComp","_this2","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","api","then","coordArr","lat","coord","lng","setState","coords","stop","apply","arguments","getAllPanoCoords","extend","LatLng","_this3","setBounds","map","index","react_default","createElement","dist","lid","position","onClick","e","showComponent","gotoPano","key","history","concat","ref","onMapMounted","zoom","initialCenter","addMarkers","Component","EnhancedMap","GoogleApiWrapper","apiKey","process","withRouter","maps_Container","Location","calibration","fname","neighborArr","setAllAttr","filename","getNeighborIds","_callee2","_context2","updateCalibration","_ref3","_callee3","camera","_context3","rotation","y","alert","_x","loc","geolib","neighbor","getDistanceTo","getBearingTo","Arrow","mesh","material","geometry","THREE","color","Rings","spinner_templateObject","_ref$width","width","_ref2","_ref2$width","_ref3$color","TWEEN","require","Pano","currLoc","neighbors","cylindergeometry","cylindermaterial","cylindermesh","texture","loader","lines","isLoading","RenderPano","bind","assertThisInitialized","panoId","loadTexture","setNeighbors","setCurrLocAndNeighbors","clear","nidArr","console","log","nid","nextLoc","addNeighbor","n","set","location","distance","bearing","_this4","load","error","side","scale","rotBegin","at","tweenRot","Tween","to","easing","Easing","Quadratic","InOut","onUpdate","onComplete","start","_this5","mainCam","useRef","_useThree","useThree","gl","canvas","scene","fov","setSize","clientWidth","clientHeight","lookAt","n0","n1","cone","conemesh","conemesh1","mouseDown","mouseX","onMouseMove","evt","preventDefault","deltaX","clientX","clientY","Math","PI","rotateScene","addEventListener","window","aspect","innerWidth","innerHeight","updateProjectionMatrix","camZoom","camAt","get","endAt","rotEnd","zVal","z","xVal","x","fovValue","zoomEnd","cos","sin","tweenZoom","_context4","RenderArrows","chain","add","updateTexture","_callee4","_context5","iter","keys","cone0","current","cone1","visible","size","coneGroup","useRender","update","Fragment","self","attach","opacity","transparent","onPointerOver","object","onPointerOut","className","spinner","height","react_three_fiber_dist","match","params","routes","path","title","ReactDOM","render","react_router_dom","r","activeClassName","react_router","component","GMap","exact","from","document","getElementById","./pano-20190724143458-mx.png","./pano-20190724143833-mx.png","./pano-20190724145944-mx.png","./pano-20190724150711-mx.png","./pano-20190724151238-mx.png","./pano-20190724151553-mx.png","./pano-demo.png","./wall.jpg","webpackContext","req","webpackContextResolve","o","Error","code"],"mappings":"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","file":"static/js/main.5e592fb8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pano-20190724143458-mx.072de3d6.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724143833-mx.0732614b.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724145944-mx.0c7531e1.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724150711-mx.f67813cf.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724151238-mx.3f9e7726.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724151553-mx.c1e8bceb.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-demo.5890e08b.png\";","module.exports = __webpack_public_path__ + \"static/media/wall.2b939dad.jpg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const NAV_BAR_HEIGHT = 64;\nexport const NAV_BAR_PADDING = 12;\n\nexport const Container = styled.div`\n\twidth: 100vw;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nexport const Header = styled.div`\n\tposition: fixed;\n\tz-index: 999;\n\ttop: 0;\n\tpadding: ${NAV_BAR_PADDING}px;\n\theight: calc(${NAV_BAR_HEIGHT}px - ${NAV_BAR_PADDING}px * 2);\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tbackground-color: #f8f8f8;\n\twidth: 100%;\n\n\t& .ir-nav-item {\n\t\tmargin-right: 1rem;\n\t\ttext-decoration: none;\n\t\tcolor: rgba(0, 0, 0, 0.6);\n\t}\n\n\t& .ir-nav-item__active {\n\t\tcolor: #ea6c2f;\n\t}\n`;\n\nexport const Content = styled.div`\n\tflex: 1;\n\tpadding: 24px;\n\tpadding-top: ${NAV_BAR_HEIGHT + 24}px;\n`;\n","import axios from 'axios'\nimport mockedPanos from '../mocks/panos.json'\nimport mockedNeighbors from '../mocks/neighbors.json'\n\n/*\nconst hostname = \"localhost\";\nconst port = \"8080\";\nconst url = 'http://' + hostname + ':' + port + '/api';\n\nconst api = axios.create({\n    baseURL: url,\n})\n\nexport const insertPano = payload => api.post(`/pano`, payload)\nexport const getAllPanos = () => api.get(`/panos/all`)\nexport const deletePanoById = id => api.delete(`/pano/${id}`)\nexport const getPanoById = id => api.get(`/pano/${id}`)\n\nexport const getPanoCoordById = (id) => api.get(`/pano/coord/${id}`)\nexport const getPanoFileNameById = id => api.get(`/pano/fname/${id}`)\nexport const getPanoAllAttrById = (id) => api.get(`/pano/allAttr/${id}`)\nexport const updateCalibrationById = (id, payload) => api.put(`/pano/cal/${id}`, payload)\n*/\n\nfunction getDataFromJSONArray(data, query, id?){\n    if(!id){//case when api resembles to 'getAllBlaBlah'\n        for(var i=0; i<data.length; i++){\n            var resultArr = [];\n            for(let param of query){\n                resultArr.push(data[i][param]);\n            }\n            return resultArr;\n        }\n    }\n    for(var i=0; i<data.length; i++){//case when api resembles \"getBlahBlahById\"\n        if(data[i][\"id\"]===id){\n            if(query.length===0)//case specific for \"getAllAttrById\"\n                return data[i];\n            var result = {};\n            for(let param of query){\n                result[param]=data[i][param];\n            }\n            return result;\n        }\n    }\n}\n\nfunction getTwoNeighbors(id, nhood){\n    let hood = mockedNeighbors[nhood];\n    if(hood.length<2)\n        return [];\n    for(var i=0; i<hood.length; i++){\n        if(id===hood[i]){\n            if(i===0) //first one, return second as neighbor\n                return [ hood[1] ];\n            else if(i===hood.length-1) //last one, return the second to the last as neighbor \n                return [ hood[hood.length-2] ];\n            //Otherwise, return the neighboring two\n            return [ hood[i-1], hood[i+1] ];\n        }\n    }\n}\n\n// Should use superagent to mock when we have time\nexport const getPanoCoordById = (id) => Promise.resolve({ data: { data: getDataFromJSONArray(mockedPanos,[\"coord\"], id) } })\n//export const getAllPanoIdAndCoord = () => Promise.resolve({ data: { data: getDataFromJSON(mockedPanos,[\"id\", \"coord\"]) } })\nexport const getAllPanoIdAndCoord = () => Promise.resolve({ data: { data: mockedPanos } })\nexport const getPanoAllAttrById = (id) => Promise.resolve({ data: { data: getDataFromJSONArray(mockedPanos,[], id) } })\nexport const getPanoFileNameById = (id) => Promise.resolve({ data: { data:  getDataFromJSONArray(mockedPanos,[\"filename\"], id) } })\nexport const getNeighborsById = (id, neighborhood) => Promise.resolve({ data: { data: getTwoNeighbors(id, neighborhood) } })\n\nconst apis = {\n    //insertPano,\n    //getAllPanos,\n    //deletePanoById,\n    //getPanoById,\n    //updateCalibrationById,\n\n    getPanoFileNameById,\n    getPanoCoordById,\n    getAllPanoIdAndCoord,\n    getPanoAllAttrById,\n    getNeighborsById\n}\n\nexport default apis","import React, { Component, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport api from \"./api/index\";\n\n// I believe there is a bug of google-maps-react\n// as it does not respect the custom style object you pass\n// in. So we have to use important for now\n// TODO:\n// look for better map candidate\nconst StyledMap = styled(Map)`\n\twidth: 100% !important;\n\theight: 100% !important;\n\tposition: relative !important;\n`;\n\nconst Container = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\n\t& > div {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n`;\n\nexport interface Coordinate {\n\tid: string | number;\n\tlat: number;\n\tlng: number;\n}\nexport interface MapContainerState {\n\tshowComp: boolean;\n\tcoords?: Coordinate[];\n}\n\nexport interface MapContainerProps extends RouteComponentProps {}\n\nclass MapContainer extends Component<MapContainerProps, MapContainerState> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowComp: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tvar getAllPanoCoords = async () => {\n\t\t\tawait api.getAllPanoIdAndCoord().then(result => {\n\t\t\t\tvar coordArr = [];\n\t\t\t\tlet data = result.data.data;\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\tcoordArr.push({\n\t\t\t\t\t\tid: data[i].id,\n\t\t\t\t\t\tlat: data[i].coord.lat,\n\t\t\t\t\t\tlng: data[i].coord.lng\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t//console.log(data);\n\t\t\t\tthis.setState({\n\t\t\t\t\tcoords: coordArr,\n\t\t\t\t\tshowComp: true\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\tgetAllPanoCoords();\n\t}\n\n\tshowComponent(i) {\n\t\tif (i !== true && i !== false) return;\n\t\tthis.setState({ showComp: i });\n\t}\n\n\tbounds = new (this.props as any).google.maps.LatLngBounds();\n\n\tsetBounds() {\n\t\tfor (var i = 0; i < (this.state as any).coords.length; i++) {\n\t\t\tlet coord = (this.state as any).coords[i];\n\t\t\tthis.bounds.extend(\n\t\t\t\tnew (this.props as any).google.maps.LatLng({\n\t\t\t\t\tlat: coord.lat,\n\t\t\t\t\tlng: coord.lng\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\n\taddMarkers() {\n\t\tthis.setBounds();\n\n\t\t//let map = new Map(this.refs.map,);\n\t\t//(this.props as any).google.maps.fitBounds(this.bounds);\n\t\treturn (this.state as any).coords.map((coord, index) => {\n\t\t\treturn (\n\t\t\t\t<Marker\n\t\t\t\t\tlid={coord.id}\n\t\t\t\t\tposition={{\n\t\t\t\t\t\tlat: coord.lat,\n\t\t\t\t\t\tlng: coord.lng\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\tthis.showComponent(false);\n\t\t\t\t\t\treturn this.gotoPano(e.lid);\n\t\t\t\t\t}}\n\t\t\t\t\tkey={coord.id}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n    }\n    \n\tgotoPano(id) {\n\t\t// @ts-ignore\n\t\tthis.props.history.push(`/viewPano/${id}`);\n\t}\n\n\trender() {\n\t\tconst { showComp } = this.state;\n\t\treturn showComp ? (\n\t\t\t<StyledMap\n\t\t\t\tref={(this.props as any).onMapMounted}\n\t\t\t\tgoogle={(this.props as any).google}\n\t\t\t\tzoom={17}\n\t\t\t\tinitialCenter={{ lat: 42.36, lng: -71.053 }}\n\t\t\t\tbounds={this.bounds}\n\t\t\t>\n\t\t\t\t{this.addMarkers()}\n\t\t\t</StyledMap>\n\t\t) : null;\n\t}\n}\n\nconst EnhancedMap = GoogleApiWrapper({\n\tapiKey: `${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n})(withRouter(MapContainer));\n\n// google-maps-react is making an higher-order-component\n// in a stupid way, as there is no way for us to change\n// the container tag (always div), and the container does not\n// accept className prop, which makes it hard for us to style\nexport default props => (\n\t<Container>\n\t\t<EnhancedMap {...props} />\n\t</Container>\n);\n","import * as geolib from 'geolib'\nimport api from './api/index'\n\nclass Location {\n    //Members\n    coord: {\n        lat: number,\n        lng: number\n    } = { lat: 0, lng: 0 }\n    calibration: number = 0.0;\n    id: string;\n    fname: string = \"\";\n    neighborhood: string = \"\";\n    neighborArr\n\n    //Methods\n    constructor(id: string) {\n        this.id = id;\n    }\n\n    setAllAttr = async () => {\n        await api.getPanoAllAttrById(this.id).then(result => {\n            this.fname = result.data.data.filename;\n            this.coord.lat = result.data.data.coord.lat;\n            this.coord.lng = result.data.data.coord.lng;\n            this.calibration = result.data.data.calibration;\n            this.neighborhood = result.data.data.neighborhood;\n        })\n    }\n\n    getNeighborIds = async () => {\n        await api.getNeighborsById(this.id, this.neighborhood).then(result => {\n            this.neighborArr = result.data.data;\n        })\n    }\n\n    getDistanceTo(loc: Location){\n        return geolib.getDistance(this.coord,loc.coord);\n    }\n\n    getDistanceToNeighbors(neighbor: Location[]) {\n        return neighbor.map(this.getDistanceTo);\n    }\n\n    getBearingTo(loc: Location) {\n        return geolib.getRhumbLineBearing(this.coord, loc.coord);\n    }\n\n    getBearingToNeighbors(neighbor: Location[]) {\n        return neighbor.map(this.getBearingTo);\n    }\n\n    updateCalibration = async (camera) => {\n        const payload = {\n            \"calibration\": -camera.rotation.y\n        }\n        //await api.updateCalibrationById(this.id,payload).then(res=>{\n        alert(\"Update Calibration is disabled at this moment!\");\n        //})\n    }\n}\n\nexport { Location }\n","import * as THREE from \"three\"\n\nclass Cylinder{\n    //Members\n    mesh: THREE.Mesh;\n    material: THREE.MeshBasicMaterial;\n    geometry: THREE.CylinderBufferGeometry;\n    texture: THREE.Texture;\n    loader: THREE.TextureLoader;\n\n    constructor(){\n        this.geometry = new THREE.CylinderBufferGeometry(20, 20, 15, 100, 1, true);\n        this.texture = new THREE.Texture();\n        this.loader = new THREE.TextureLoader();\n        this.material = new THREE.MeshBasicMaterial();\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n    }\n    \n    LoadPanoTexture(fname:string, onComplete:Function){\n        this.texture = this.loader.load(process.env.PUBLIC_URL + 'resource/'+fname, undefined, undefined, err => {\n            console.error(err)\n        });\n    }\n}\n\nclass Arrow{\n    //Members\n    mesh: THREE.Mesh;\n    material: THREE.MeshBasicMaterial;\n    geometry: THREE.ConeBufferGeometry;\n    id: string\n\n    constructor(){\n        this.geometry = new THREE.ConeBufferGeometry(0.2,1,16);\n        this.material = new THREE.MeshBasicMaterial({color:\"white\"})\n        this.mesh = new THREE.Mesh(this.geometry,this.material);\n    }\n    onClickHandler(){\n        \n    }\n\n}\n\nexport{Arrow, Cylinder}\n\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Rings = styled.div`\n\t&,\n\t&:after {\n\t\tborder-radius: 50%;\n\t\twidth: ${({ width = \"48\" }) => width}px;\n\t\theight: ${({ width = \"48\" }) => width}px;\n\t}\n\t& {\n\t\tmargin: 60px auto;\n\t\tfont-size: 10px;\n\t\tposition: relative;\n\t\ttext-indent: -9999em;\n\t\tborder-top: 1.1em solid rgba(0, 0, 0, 0.1);\n\t\tborder-right: 1.1em solid rgba(0, 0, 0, 0.1);\n\t\tborder-bottom: 1.1em solid rgba(0, 0, 0, 0.1);\n\t\tborder-left: 1.1em solid ${({ color = \"#ea6c2f\" }) => color};\n\t\t-webkit-transform: translateZ(0);\n\t\t-ms-transform: translateZ(0);\n\t\ttransform: translateZ(0);\n\t\t-webkit-animation: load8 1.1s infinite linear;\n\t\tanimation: load8 1.1s infinite linear;\n\t}\n\t@-webkit-keyframes load8 {\n\t\t0% {\n\t\t\t-webkit-transform: rotate(0deg);\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\t100% {\n\t\t\t-webkit-transform: rotate(360deg);\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\t@keyframes load8 {\n\t\t0% {\n\t\t\t-webkit-transform: rotate(0deg);\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\t100% {\n\t\t\t-webkit-transform: rotate(360deg);\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n`;\n\nexport default Rings;\n","import React, { Component, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, useThree, useRender } from \"react-three-fiber\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport SVGLoader from \"three-svg-loader\";\n\nimport \"./style/pano.css\";\nimport { Location } from \"./geo\";\nimport { Arrow, Cylinder } from \"./shapes\";\nimport Spinner from \"./components/spinner\";\n\nconst TWEEN = require(\"@tweenjs/tween.js\");\n\ninterface PanoProps extends RouteComponentProps<{ id?: string }> {\n\tlid: string;\n}\n\ntype PanoState = { isLoading: boolean };\ntype NeighborType = {\n\tlocation: Location;\n\tdistance: number;\n\tbearing: number;\n};\n\nclass Pano extends Component<PanoProps, PanoState> {\n\t//Members\n\tcurrLoc: Location;\n\tneighbors: Map<string, NeighborType>;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true\n\t\t};\n\t\tthis.RenderPano = this.RenderPano.bind(this);\n\t}\n\t\n\tget panoId() {\n\t\t// @ts-ignore\n\t\treturn this.props.match.params.id || \"20190724151553\";\n\t}\n\n\tcomponentDidMount() {\n\t\tvar setCurrLocAndNeighbors = async () => {\n\t\t\t//setCurrLoc\n\t\t\tthis.currLoc = new Location(this.panoId);\n\t\t\tawait this.currLoc.setAllAttr().then(() => {\n\t\t\t\tthis.loadTexture();\n\t\t\t});\n\n\t\t\t//setNeighbors\n\t\t\tthis.neighbors = new Map();\n\t\t\tthis.setNeighbors();\n\t\t\tthis.setState({ isLoading: false });\n\t\t};\n\t\tsetCurrLocAndNeighbors();\n\t}\n\n\tasync setNeighbors() {//Only supports two neighbors for now\n        this.neighbors.clear();//Purge previous neighbors\n\t\tawait this.currLoc.getNeighborIds();\n\t\tlet nidArr = this.currLoc.neighborArr;\n\t\tif((nidArr as any).length===0){\n\t\t\tconsole.log(\"No neighbors discorvered...\");\n\t\t\treturn ;\n\t\t}\n\t\telse{\n\t\t\tfor(let nid of nidArr as any){\n\t\t\t\tlet nextLoc = new Location(nid);\n\t\t\t\tawait nextLoc.setAllAttr().then(() => {\n\t\t\t\t\tthis.addNeighbor(nextLoc);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\taddNeighbor(n: Location) {\n\t\tthis.neighbors.set(n.id, {\n\t\t\tlocation: n,\n\t\t\tdistance: this.currLoc.getDistanceTo(n),\n\t\t\tbearing: this.currLoc.getBearingTo(n)\n\t\t});\n\t}\n\n\t//THREEjs objects\n\tcylindergeometry = new THREE.CylinderBufferGeometry(20, 20, 15, 100, 1, true);\n\tcylindermaterial = undefined;\n\tcylindermesh = undefined;\n\ttexture = undefined;\n\tloader = new THREE.TextureLoader();\n\tlines = [];\n\n\tloadTexture() {\n\t\tthis.texture = this.loader.load(\n\t\t\trequire(`./assets/viewPano/resource/${this.currLoc.fname}`),\n\t\t\t() => {\n\t\t\t\tthis.setState({ isLoading: false });\n\t\t\t},\n\t\t\tundefined,\n\t\t\terr => {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t);\n\n\t\tthis.cylindermaterial = new THREE.MeshBasicMaterial({\n\t\t\tmap: this.texture,\n\t\t\tside: THREE.DoubleSide\n\t\t});\n\t\tthis.cylindermesh = new THREE.Mesh(\n\t\t\tthis.cylindergeometry,\n\t\t\tthis.cylindermaterial\n\t\t);\n\t\tthis.cylindergeometry.scale(-1, 1, 1);\n\t\t//this.cylindermesh.position.y = 0\n\t\tthis.cylindermesh.rotation.y = this.currLoc.calibration;\n\t}\n\n\t/*\n\tInitNeighborPins() {\n\t\tconsole.log(this.lines);\n\t\tif (this.lines.length !== 0) {\n\t\t\tthis.lines = [];\n\t\t}\n\t\tthis.neighbors.forEach((loc, id) => {\n\t\t\tlet bearing = loc.bearing;\n\t\t\tlet line = new THREE.LineBasicMaterial({ color: \"blue\" });\n\t\t\tlet geometry = new THREE.Geometry();\n\t\t\tgeometry.vertices.push(new THREE.Vector3(0, -5, 0));\n\t\t\tgeometry.vertices.push(\n\t\t\t\tnew THREE.Vector3(\n\t\t\t\t\t20 * Math.sin((bearing * Math.PI) / 180),\n\t\t\t\t\t-5,\n\t\t\t\t\t-20 * Math.cos((bearing * Math.PI) / 180)\n\t\t\t\t)\n\t\t\t);\n\t\t\tthis.lines.push(new THREE.Line(geometry, line));\n\t\t});\n\t}*/\n\n\tCameraLookNorth(camera) {\n\t\tvar rotBegin = {\n\t\t\tat: camera.rotation.y\n\t\t};\n\t\tvar rotEnd = {\n\t\t\tat: 0\n\t\t};\n\t\tvar tweenRot = new TWEEN.Tween(rotBegin)\n\t\t\t.to(rotEnd, 750)\n\t\t\t.easing(TWEEN.Easing.Quadratic.InOut);\n\t\ttweenRot.onUpdate(function() {\n\t\t\tcamera.rotation.y = rotBegin.at;\n\t\t});\n\t\ttweenRot.onComplete(() => {\n\t\t\tcamera.rotation.y = 0;\n\t\t});\n\t\ttweenRot.start();\n\t}\n\n\tRenderPano() {\n\t\tvar mainCam = useRef();\n\t\tvar { gl, camera, canvas, scene } = useThree();\n\t\t(camera as any).fov = 40;\n\t\t//gl.setSize(window.innerWidth, window.innerHeight);\n\t\tgl.setSize(canvas.clientWidth, canvas.clientHeight);\n\t\t\n\t\tcamera.position.set(0, 0, 0);\n\t\tcamera.lookAt(0, 0, 0);\n\t\t//canvas.width  = canvas.clientWidth;\n\t\t//canvas.height = canvas.clientHeight;\n\t\t//gl.setViewport(0, 0, canvas.clientWidth, canvas.clientHeight);\n\n\t\tlet cone = new Arrow();\n\t\tvar conemesh = useRef();\n\t\tvar conemesh1 = useRef();\n\t\tvar n0, n1;\n\n\t\tvar mouseDown = false,\n\t\t\tmouseX = 0,\n\t\t\tmouseY = 0;\n\n\t\tfunction onMouseMove(evt) {\n\t\t\tif (!mouseDown) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tevt.preventDefault();\n\t\t\tvar deltaX = evt.clientX - mouseX,\n\t\t\t\tdeltaY = evt.clientY - mouseY;\n\t\t\tmouseX = evt.clientX;\n\t\t\tmouseY = evt.clientY;\n\n\t\t\trotateScene(deltaX);\n\t\t}\n\n\t\tfunction onMouseDown(evt) {\n\t\t\tevt.preventDefault();\n\t\t\tmouseDown = true;\n\t\t\tmouseX = evt.clientX;\n\t\t\tmouseY = evt.clientY;\n\t\t}\n\n\t\tfunction onMouseUp(evt) {\n\t\t\tevt.preventDefault();\n\t\t\tmouseDown = false;\n\t\t}\n\n\t\tfunction onWindowResize(){\n\t\t\tgl.setSize( canvas.clientWidth, canvas.clientHeight );\n\t\t\t(camera as any).aspect = window.innerWidth / window.innerHeight;\n\t\t\t(camera as any).updateProjectionMatrix();\n\t\t}\n\n\t\tcanvas.addEventListener(\"mousemove\", e => onMouseMove(e), false);\n\t\tcanvas.addEventListener(\"mousedown\", e => onMouseDown(e), false);\n\t\tcanvas.addEventListener(\"mouseup\", e => onMouseUp(e), false);\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\t\tfunction rotateScene(deltaX) {\n\t\t\t//console.log(camera.rotation.y);\n\t\t\tcamera.rotation.y += deltaX / 1000;\n\t\t\tcamera.rotation.y %= 2 * Math.PI;\n\t\t}\n\n\t\tvar camZoom = id => {\n\t\t\tconst depth = 15.5;\n\t\t\tconst resFov = 75;\n\t\t\tconst camAt = (this.neighbors.get(id).bearing * Math.PI) / 180;\n\t\t\tvar endAt = (-this.neighbors.get(id).bearing * Math.PI) / 180;\n\t\t\tif (camera.rotation.y > 0) {\n\t\t\t\tendAt = 2 * Math.PI - (this.neighbors.get(id).bearing * Math.PI) / 180;\n\t\t\t}\n\t\t\tvar rotBegin = {\n\t\t\t\tat: (camera as any).rotation.y\n\t\t\t};\n\t\t\tvar rotEnd = {\n\t\t\t\tat: endAt\n\t\t\t};\n\t\t\tvar tweenRot = new TWEEN.Tween(rotBegin)\n\t\t\t\t.to(rotEnd, 500)\n\t\t\t\t.easing(TWEEN.Easing.Quadratic.InOut);\n\t\t\ttweenRot.onUpdate(function() {\n\t\t\t\t(camera as any).rotation.y = rotBegin.at;\n\t\t\t});\n\t\t\ttweenRot.onComplete(() => {\n\t\t\t\tcamera.rotation.y = (-this.neighbors.get(id).bearing * Math.PI) / 180;\n\t\t\t});\n\n\t\t\tvar zoom = {\n\t\t\t\tzVal: (camera as any).position.z,\n\t\t\t\txVal: (camera as any).position.x,\n\t\t\t\tfovValue: (camera as any).fov\n\t\t\t};\n\t\t\tvar zoomEnd = {\n\t\t\t\tzVal: -depth * Math.cos(camAt),\n\t\t\t\txVal: depth * Math.sin(camAt),\n\t\t\t\tfovValue: resFov\n\t\t\t};\n\t\t\tvar tweenZoom = new TWEEN.Tween(zoom).to(zoomEnd, 500);\n\n\t\t\ttweenZoom.onUpdate(function() {\n\t\t\t\t(camera as any).position.z = zoom.zVal;\n\t\t\t\t(camera as any).position.x = zoom.xVal;\n\t\t\t\t(camera as any).fov = zoom.fovValue;\n\t\t\t\t(camera as any).updateProjectionMatrix();\n\t\t\t});\n\t\t\ttweenZoom.onComplete(async () => {\n\t\t\t\t(camera as any).position.z = 0;\n\t\t\t\t(camera as any).position.x = 0;\n\t\t\t\t(camera as any).fov = 40;\n\t\t\t\t(camera as any).updateProjectionMatrix();\n\t\t\t\tthis.cylindermaterial.map = this.texture;\n\t\t\t\tthis.cylindermesh.rotation.y = this.currLoc.calibration\n\t\t\t\tawait this.setNeighbors().then(RenderArrows);//.then(()=>{this.InitNeighborPins()});\n\t\t\t});\n\t\t\ttweenRot.chain(tweenZoom);\n\t\t\ttweenRot.start();\n\t\t};\n\n\t\tscene.add(this.cylindermesh);\n\t\t//RenderCompass();\n\n\t\tvar updateTexture = async (id) => {\n\t\t\tthis.currLoc = this.neighbors.get(id).location;\n\t\t\t//await this.currLoc.setAllAttr();\n\t\t\tthis.texture = this.loader.load(\n\t\t\t\trequire(`./assets/viewPano/resource/${this.currLoc.fname}`),\n\t\t\t\t() => {\n\t\t\t\t\tcamZoom(id);\n\t\t\t\t},\n\t\t\t\tundefined,\n\t\t\t\terr => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\t//this.InitNeighborPins();\n\t\t\n\t\t/*\n\t\tvar compassGroup = useRef();\n\t\tfunction RenderCompass() {\n\t\t\tvar loader = new SVGLoader();\n\t\t\tloader.load(\n\t\t\t\tprocess.env.PUBLIC_URL + \"compass.svg\",\n\t\t\t\tfunction(data) {\n\t\t\t\t\tvar paths = data.paths;\n\t\t\t\t\tfor (var i = 0; i < paths.length; i++) {\n\t\t\t\t\t\tvar path = paths[i];\n\t\t\t\t\t\tvar material = new THREE.MeshBasicMaterial({\n\t\t\t\t\t\t\tcolor: path.color,\n\t\t\t\t\t\t\tside: THREE.DoubleSide,\n\t\t\t\t\t\t\tdepthWrite: false\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar shapes = path.toShapes(true);\n\t\t\t\t\t\tfor (var j = 0; j < shapes.length; j++) {\n\t\t\t\t\t\t\tvar shape = shapes[j];\n\t\t\t\t\t\t\tvar geometry = new THREE.ShapeBufferGeometry(shape);\n\t\t\t\t\t\t\tvar mesh = new THREE.Mesh(geometry, material);\n\t\t\t\t\t\t\t(compassGroup.current as any).add(mesh);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//console.log(compassGroup);\n\t\t\t\t\t(compassGroup.current as any).scale.set(13, 13, 13);\n\t\t\t\t\tscene.add(compassGroup.current);\n\t\t\t\t},\n\t\t\t\tundefined,\n\t\t\t\tfunction(error) {\n\t\t\t\t\tconsole.log(\"Error Loading Compass\");\n\t\t\t\t}\n\t\t\t);\n\t\t}*/\n\n\t\tvar RenderArrows = () => {\n\t\t\tvar iter = this.neighbors.keys();\n\t\t\t//iter.next();\n\t\t\tn0 = this.neighbors.get(iter.next().value);\n\t\t\tlet cone0 = conemesh.current as any;\n\t\t\tlet cone1 = conemesh1.current as any;\n\t\t\t//position\n\t\t\tcone0.position.z = -Math.cos(n0.bearing * Math.PI / 180);\n\t\t\tcone0.position.x = Math.sin(n0.bearing * Math.PI / 180);\n\t\t\t//rotation\n\t\t\tcone0.rotation.x = -1.5708;\n\t\t\tcone0.rotation.z = (-n0.bearing) * Math.PI / 180;\n\t\t\tcone1.visible = false;\n\t\t\tif(this.neighbors.size>1){\n\t\t\t\tn1 = this.neighbors.get(iter.next().value);\n\t\t\t\tcone1.visible = true;\n\t\t\t\t//position\n\t\t\t\tcone1.position.z = -Math.cos(n1.bearing * Math.PI / 180);\n\t\t\t\tcone1.position.x = Math.sin(n1.bearing * Math.PI / 180);\n\t\t\t\t//rotation\n\t\t\t\tcone1.rotation.x = -1.5708;\n\t\t\t\tcone1.rotation.z = (-n1.bearing) * Math.PI / 180;\n\t\t\t}\n\t\t}\n        if(conemesh.current&&conemesh1.current){\n\t\t\tRenderArrows();\n        }\n\t\tvar coneGroup = useRef();\n\n\t\tuseRender(() => {\n\t\t\tTWEEN.update();\n\t\t\t(coneGroup.current as any).position.set(\n\t\t\t\t-13 * Math.sin(camera.rotation.y),\n\t\t\t\t-4,\n\t\t\t\t-13 * Math.cos(camera.rotation.y)\n\t\t\t);\n\t\t\t/*\n\t\t\t(compassGroup.current as any).position.set(\n\t\t\t\t-13 * Math.sin(camera.rotation.y),\n\t\t\t\t4,\n\t\t\t\t-13 * Math.cos(camera.rotation.y)\n\t\t\t);*/\n\t\t});\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<perspectiveCamera\n\t\t\t\t\tref={mainCam}\n\t\t\t\t\tfov={45}\n\t\t\t\t\taspect={window.innerWidth / window.innerHeight}\n\t\t\t\t\tonUpdate={self => self.updateProjectionMatrix()}\n\t\t\t\t/>\n\t\t\t\t<group ref={coneGroup} /*group of arrows */>\n\t\t\t\t\t<mesh //Compass Plate \n\t\t\t\t\t\t//onClick={()=>{this.CameraLookNorth(camera);}} \n\t\t\t\t\t\tposition={[0, -0.5, 0]} rotation={[-1.571, 0, 0]}\n                        geometry={new THREE.CircleGeometry(2, 100, 0)}>\n                        <meshBasicMaterial attach=\"material\" color=\"white\" opacity={0.0} transparent={true}/>\n\t\t\t\t\t</mesh>\n\n\t\t\t\t\t<mesh //First Arrow\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tupdateTexture(n0.location.id); /*this.currLoc.updateCalibration(camera)*/\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonPointerOver={e => {(e.object as any).material.opacity=0.9;}}\n\t\t\t\t\t\tonPointerOut={e => {(e.object as any).material.opacity=0.5;}}\n\t\t\t\t\t\tref={conemesh}\n\t\t\t\t\t\tgeometry={cone.geometry}\n\t\t\t\t\t>\n\t\t\t\t\t\t<meshBasicMaterial attach=\"material\" color=\"light grey\" opacity={0.5} transparent={true}/>\n\t\t\t\t\t</mesh>\n\t\t\t\t\t<mesh //Second Arrow\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tupdateTexture(n1.location.id);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonPointerOver={e => {(e.object as any).material.opacity=0.9;}}\n\t\t\t\t\t\tonPointerOut={e => {(e.object as any).material.opacity=0.5;}}\n                        ref={conemesh1}\n                        geometry={cone.geometry}\n                    >\n                        <meshBasicMaterial attach=\"material\" color=\"white\" opacity={0.5} transparent={true}/>\n                    </mesh>\n\t\t\t\t</group>\n\t\t\t\t{/*\n\t\t\t\t<group\n\t\t\t\t\tonClick={() => this.CameraLookNorth(camera)}\n\t\t\t\t\tref={compassGroup}\n\t\t\t\t></group>*/}\n\t\t\t</>\n\t\t);\n\t}\n\t//TODO: change the pano window render size\n\trender() {\n\t\tconst { isLoading } = this.state;\n\t\treturn isLoading ? (\n\t\t\t<div className={\"spinner-container\"}>\n\t\t\t\t<Spinner width={100} height={100} />\n\t\t\t</div>\n\t\t) : (\n\t\t\t<div className=\"Pano-canvas\">\n\t\t\t\t<Canvas>\n\t\t\t\t\t<this.RenderPano />\n\t\t\t\t</Canvas>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(Pano);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n\tHashRouter as Router,\n\tRoute,\n\tSwitch,\n\tNavLink,\n\tRedirect\n} from \"react-router-dom\";\n\nimport { Container, Header, Content } from \"./components/layout\";\nimport GMap from \"./maps\";\nimport Pano from \"./pano\";\nimport \"./style/App.css\";\n\nconst routes = [\n\t{\n\t\tpath: \"/maps\",\n\t\ttitle: \"Pano Maps\"\n\t},\n\t{\n\t\tpath: \"/viewPano\",\n\t\ttitle: \"View Pano\"\n\t}\n];\n\nexport const Interface: React.FC = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Container>\n\t\t\t\t<Header>\n\t\t\t\t\t{routes.map(r => (\n\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\tto={r.path}\n\t\t\t\t\t\t\tkey={r.path}\n\t\t\t\t\t\t\tactiveClassName=\"ir-nav-item__active\"\n\t\t\t\t\t\t\tclassName=\"ir-nav-item\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{r.title}\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t))}\n\t\t\t\t</Header>\n\t\t\t\t<Content>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/maps\" component={GMap} />\n\t\t\t\t\t\t<Route exact={true} path=\"/viewPano/:id\" component={Pano} />\n\t\t\t\t\t\t<Route path=\"/viewPano\" component={Pano} />\n\t\t\t\t\t\t<Redirect exact from=\"/\" to=\"maps\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Content>\n\t\t\t</Container>\n\t\t</Router>\n\t);\n};\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport * as App from './App';\n\nReactDOM.render(<App.Interface />, document.getElementById('interface'));\n\n","var map = {\n\t\"./pano-20190724143458-mx.png\": 112,\n\t\"./pano-20190724143833-mx.png\": 113,\n\t\"./pano-20190724145944-mx.png\": 114,\n\t\"./pano-20190724150711-mx.png\": 115,\n\t\"./pano-20190724151238-mx.png\": 116,\n\t\"./pano-20190724151553-mx.png\": 117,\n\t\"./pano-demo.png\": 118,\n\t\"./wall.jpg\": 119\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 58;"],"sourceRoot":""}