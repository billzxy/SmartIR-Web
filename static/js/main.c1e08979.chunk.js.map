{"version":3,"sources":["assets/viewPano/resource/pano-20190724143458-mx.png","assets/viewPano/resource/pano-20190724143833-mx.png","assets/viewPano/resource/pano-20190724145944-mx.png","assets/viewPano/resource/pano-20190724150711-mx.png","assets/viewPano/resource/pano-20190724151238-mx.png","assets/viewPano/resource/pano-20190724151553-mx.png","assets/viewPano/resource/pano-demo.png","assets/viewPano/resource/wall.jpg","components/layout.tsx","api/index.ts","maps.tsx","geo.tsx","shapes.tsx","components/spinner.tsx","pano.tsx","App.tsx","index.tsx","assets/viewPano/resource sync /^/.*$"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Header","_templateObject2","Content","_templateObject3","NAV_BAR_HEIGHT","getDataFromJSONArray","data","query","id","i","length","resultArr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","param","value","push","err","return","result","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getTwoNeighbors","nhood","hood","mockedNeighbors","apis","getPanoFileNameById","Promise","resolve","mockedPanos","getPanoCoordById","getAllPanoIdAndCoord","getPanoAllAttrById","getNeighborsById","neighborhood","StyledMap","Map","maps_templateObject","maps_templateObject2","MapContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bounds","google","maps","LatLngBounds","state","showComp","_this2","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","api","then","coordArr","lat","coord","lng","setState","coords","stop","apply","arguments","getAllPanoCoords","extend","LatLng","_this3","setBounds","map","index","react_default","createElement","dist","lid","position","onClick","e","showComponent","gotoPano","key","history","concat","ref","onMapMounted","zoom","initialCenter","addMarkers","Component","EnhancedMap","GoogleApiWrapper","apiKey","process","withRouter","maps_Container","Location","calibration","fname","neighborArr","setAllAttr","filename","getNeighborIds","_callee2","_context2","updateCalibration","_ref3","_callee3","camera","_context3","rotation","y","alert","_x","loc","geolib","neighbor","getDistanceTo","getBearingTo","Arrow","mesh","material","geometry","THREE","color","Rings","spinner_templateObject","_ref$width","width","_ref2","_ref2$width","_ref3$color","TWEEN","require","Pano","currLoc","neighbors","cylindergeometry","cylindermaterial","cylindermesh","texture","loader","lines","tempcylindergeometry","tempcylindermaterial","tempcylindermesh","isLoading","RenderPano","bind","assertThisInitialized","panoId","loadTexture","setNeighbors","setCurrLocAndNeighbors","clear","nidArr","console","log","nid","nextLoc","addNeighbor","n","set","location","distance","bearing","_this4","load","error","side","scale","rotBegin","at","tweenRot","Tween","to","easing","Easing","Quadratic","InOut","onUpdate","onComplete","start","_this5","mainCam","useRef","_useThree","useThree","gl","canvas","scene","fov","setSize","clientWidth","clientHeight","lookAt","n0","n1","cone","conemesh","conemesh1","mouseDown","mouseX","startX","rotateScene","deltaX","Math","PI","addEventListener","evt","preventDefault","clientX","clientY","onMouseMove","window","wheelDeltaY","event","targetTouches","pageX","onTouchMove","aspect","innerWidth","innerHeight","updateProjectionMatrix","animateTransition","camAt","get","endAt","rotEnd","zVal","z","xVal","x","fovValue","opacity","zoomEnd","cos","sin","tweenZoom","_context4","transparent","remove","dispose","RenderArrows","chain","add","transitionToScene","_callee4","_context5","iter","keys","cone0","current","cone1","visible","size","coneGroup","compassGroup","triGeo","triGeoArr","setChildrenOpacity","group","opc","vertices","faces","computeFaceNormals","testMesh","useRender","update","Fragment","self","onPointerOver","object","onPointerOut","attach","CameraLookNorth","children","className","spinner","height","react_three_fiber_dist","match","params","routes","path","title","ReactDOM","render","react_router_dom","r","activeClassName","react_router","component","GMap","exact","from","document","getElementById","./pano-20190724143458-mx.png","./pano-20190724143833-mx.png","./pano-20190724145944-mx.png","./pano-20190724150711-mx.png","./pano-20190724151238-mx.png","./pano-20190724151553-mx.png","./pano-demo.png","./wall.jpg","webpackContext","req","webpackContextResolve","o","Error","code"],"mappings":"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","file":"static/js/main.c1e08979.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pano-20190724143458-mx.072de3d6.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724143833-mx.0732614b.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724145944-mx.0c7531e1.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724150711-mx.f67813cf.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724151238-mx.3f9e7726.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724151553-mx.c1e8bceb.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-demo.5890e08b.png\";","module.exports = __webpack_public_path__ + \"static/media/wall.2b939dad.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const NAV_BAR_HEIGHT = 64;\r\nexport const NAV_BAR_PADDING = 12;\r\n\r\nexport const Container = styled.div`\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n\tposition: fixed;\r\n\tz-index: 999;\r\n\ttop: 0;\r\n\tpadding: ${NAV_BAR_PADDING}px;\r\n\theight: calc(${NAV_BAR_HEIGHT}px - ${NAV_BAR_PADDING}px * 2);\r\n\tdisplay: flex;\r\n\tjustify-content: flex-start;\r\n\talign-items: center;\r\n\tbackground-color: #f8f8f8;\r\n\twidth: 100%;\r\n\r\n\t& .ir-nav-item {\r\n\t\tmargin-right: 1rem;\r\n\t\ttext-decoration: none;\r\n\t\tcolor: rgba(0, 0, 0, 0.6);\r\n\t}\r\n\r\n\t& .ir-nav-item__active {\r\n\t\tcolor: #ea6c2f;\r\n\t}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tflex: 1;\r\n\tpadding: 24px;\r\n\tpadding-top: ${NAV_BAR_HEIGHT + 24}px;\r\n`;\r\n","import axios from 'axios'\r\nimport mockedPanos from '../mocks/panos.json'\r\nimport mockedNeighbors from '../mocks/neighbors.json'\r\n\r\n/*\r\nconst hostname = \"localhost\";\r\nconst port = \"8080\";\r\nconst url = 'http://' + hostname + ':' + port + '/api';\r\n\r\nconst api = axios.create({\r\n    baseURL: url,\r\n})\r\n\r\nexport const insertPano = payload => api.post(`/pano`, payload)\r\nexport const getAllPanos = () => api.get(`/panos/all`)\r\nexport const deletePanoById = id => api.delete(`/pano/${id}`)\r\nexport const getPanoById = id => api.get(`/pano/${id}`)\r\n\r\nexport const getPanoCoordById = (id) => api.get(`/pano/coord/${id}`)\r\nexport const getPanoFileNameById = id => api.get(`/pano/fname/${id}`)\r\nexport const getPanoAllAttrById = (id) => api.get(`/pano/allAttr/${id}`)\r\nexport const updateCalibrationById = (id, payload) => api.put(`/pano/cal/${id}`, payload)\r\n*/\r\n\r\nfunction getDataFromJSONArray(data, query, id?){\r\n    if(!id){//case when api resembles to 'getAllBlaBlah'\r\n        for(var i=0; i<data.length; i++){\r\n            var resultArr = [];\r\n            for(let param of query){\r\n                resultArr.push(data[i][param]);\r\n            }\r\n            return resultArr;\r\n        }\r\n    }\r\n    for(var i=0; i<data.length; i++){//case when api resembles \"getBlahBlahById\"\r\n        if(data[i][\"id\"]===id){\r\n            if(query.length===0)//case specific for \"getAllAttrById\"\r\n                return data[i];\r\n            var result = {};\r\n            for(let param of query){\r\n                result[param]=data[i][param];\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getTwoNeighbors(id, nhood){\r\n    let hood = mockedNeighbors[nhood];\r\n    if(hood.length<2)\r\n        return [];\r\n    for(var i=0; i<hood.length; i++){\r\n        if(id===hood[i]){\r\n            if(i===0) //first one, return second as neighbor\r\n                return [ hood[1] ];\r\n            else if(i===hood.length-1) //last one, return the second to the last as neighbor \r\n                return [ hood[hood.length-2] ];\r\n            //Otherwise, return the neighboring two\r\n            return [ hood[i-1], hood[i+1] ];\r\n        }\r\n    }\r\n}\r\n\r\n// Should use superagent to mock when we have time\r\nexport const getPanoCoordById = (id) => Promise.resolve({ data: { data: getDataFromJSONArray(mockedPanos,[\"coord\"], id) } })\r\n//export const getAllPanoIdAndCoord = () => Promise.resolve({ data: { data: getDataFromJSON(mockedPanos,[\"id\", \"coord\"]) } })\r\nexport const getAllPanoIdAndCoord = () => Promise.resolve({ data: { data: mockedPanos } })\r\nexport const getPanoAllAttrById = (id) => Promise.resolve({ data: { data: getDataFromJSONArray(mockedPanos,[], id) } })\r\nexport const getPanoFileNameById = (id) => Promise.resolve({ data: { data:  getDataFromJSONArray(mockedPanos,[\"filename\"], id) } })\r\nexport const getNeighborsById = (id, neighborhood) => Promise.resolve({ data: { data: getTwoNeighbors(id, neighborhood) } })\r\n\r\nconst apis = {\r\n    //insertPano,\r\n    //getAllPanos,\r\n    //deletePanoById,\r\n    //getPanoById,\r\n    //updateCalibrationById,\r\n\r\n    getPanoFileNameById,\r\n    getPanoCoordById,\r\n    getAllPanoIdAndCoord,\r\n    getPanoAllAttrById,\r\n    getNeighborsById\r\n}\r\n\r\nexport default apis","import React, { Component, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport api from \"./api/index\";\r\n\r\n// I believe there is a bug of google-maps-react\r\n// as it does not respect the custom style object you pass\r\n// in. So we have to use important for now\r\n// TODO:\r\n// look for better map candidate\r\nconst StyledMap = styled(Map)`\r\n\twidth: 100% !important;\r\n\theight: 100% !important;\r\n\tposition: relative !important;\r\n`;\r\n\r\nconst Container = styled.div`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\r\n\t& > div {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n`;\r\n\r\nexport interface Coordinate {\r\n\tid: string | number;\r\n\tlat: number;\r\n\tlng: number;\r\n}\r\nexport interface MapContainerState {\r\n\tshowComp: boolean;\r\n\tcoords?: Coordinate[];\r\n}\r\n\r\nexport interface MapContainerProps extends RouteComponentProps {}\r\n\r\nclass MapContainer extends Component<MapContainerProps, MapContainerState> {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshowComp: false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tvar getAllPanoCoords = async () => {\r\n\t\t\tawait api.getAllPanoIdAndCoord().then(result => {\r\n\t\t\t\tvar coordArr = [];\r\n\t\t\t\tlet data = result.data.data;\r\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\r\n\t\t\t\t\tcoordArr.push({\r\n\t\t\t\t\t\tid: data[i].id,\r\n\t\t\t\t\t\tlat: data[i].coord.lat,\r\n\t\t\t\t\t\tlng: data[i].coord.lng\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(data);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcoords: coordArr,\r\n\t\t\t\t\tshowComp: true\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t};\r\n\t\tgetAllPanoCoords();\r\n\t}\r\n\r\n\tshowComponent(i) {\r\n\t\tif (i !== true && i !== false) return;\r\n\t\tthis.setState({ showComp: i });\r\n\t}\r\n\r\n\tbounds = new (this.props as any).google.maps.LatLngBounds();\r\n\r\n\tsetBounds() {\r\n\t\tfor (var i = 0; i < (this.state as any).coords.length; i++) {\r\n\t\t\tlet coord = (this.state as any).coords[i];\r\n\t\t\tthis.bounds.extend(\r\n\t\t\t\tnew (this.props as any).google.maps.LatLng({\r\n\t\t\t\t\tlat: coord.lat,\r\n\t\t\t\t\tlng: coord.lng\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\taddMarkers() {\r\n\t\tthis.setBounds();\r\n\r\n\t\t//let map = new Map(this.refs.map,);\r\n\t\t//(this.props as any).google.maps.fitBounds(this.bounds);\r\n\t\treturn (this.state as any).coords.map((coord, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Marker\r\n\t\t\t\t\tlid={coord.id}\r\n\t\t\t\t\tposition={{\r\n\t\t\t\t\t\tlat: coord.lat,\r\n\t\t\t\t\t\tlng: coord.lng\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\tthis.showComponent(false);\r\n\t\t\t\t\t\treturn this.gotoPano(e.lid);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tkey={coord.id}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n    }\r\n    \r\n\tgotoPano(id) {\r\n\t\t// @ts-ignore\r\n\t\tthis.props.history.push(`/viewPano/${id}`);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { showComp } = this.state;\r\n\t\treturn showComp ? (\r\n\t\t\t<StyledMap\r\n\t\t\t\tref={(this.props as any).onMapMounted}\r\n\t\t\t\tgoogle={(this.props as any).google}\r\n\t\t\t\tzoom={17}\r\n\t\t\t\tinitialCenter={{ lat: 42.36, lng: -71.053 }}\r\n\t\t\t\tbounds={this.bounds}\r\n\t\t\t>\r\n\t\t\t\t{this.addMarkers()}\r\n\t\t\t</StyledMap>\r\n\t\t) : null;\r\n\t}\r\n}\r\n\r\nconst EnhancedMap = GoogleApiWrapper({\r\n\tapiKey: `${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\r\n})(withRouter(MapContainer));\r\n\r\n// google-maps-react is making an higher-order-component\r\n// in a stupid way, as there is no way for us to change\r\n// the container tag (always div), and the container does not\r\n// accept className prop, which makes it hard for us to style\r\nexport default props => (\r\n\t<Container>\r\n\t\t<EnhancedMap {...props} />\r\n\t</Container>\r\n);\r\n","import * as geolib from 'geolib'\r\nimport api from './api/index'\r\n\r\nclass Location {\r\n    //Members\r\n    coord: {\r\n        lat: number,\r\n        lng: number\r\n    } = { lat: 0, lng: 0 }\r\n    calibration: number = 0.0;\r\n    id: string;\r\n    fname: string = \"\";\r\n    neighborhood: string = \"\";\r\n    neighborArr\r\n\r\n    //Methods\r\n    constructor(id: string) {\r\n        this.id = id;\r\n    }\r\n\r\n    setAllAttr = async () => {\r\n        await api.getPanoAllAttrById(this.id).then(result => {\r\n            this.fname = result.data.data.filename;\r\n            this.coord.lat = result.data.data.coord.lat;\r\n            this.coord.lng = result.data.data.coord.lng;\r\n            this.calibration = result.data.data.calibration;\r\n            this.neighborhood = result.data.data.neighborhood;\r\n        })\r\n    }\r\n\r\n    getNeighborIds = async () => {\r\n        await api.getNeighborsById(this.id, this.neighborhood).then(result => {\r\n            this.neighborArr = result.data.data;\r\n        })\r\n    }\r\n\r\n    getDistanceTo(loc: Location){\r\n        return geolib.getDistance(this.coord,loc.coord);\r\n    }\r\n\r\n    getDistanceToNeighbors(neighbor: Location[]) {\r\n        return neighbor.map(this.getDistanceTo);\r\n    }\r\n\r\n    getBearingTo(loc: Location) {\r\n        return geolib.getRhumbLineBearing(this.coord, loc.coord);\r\n    }\r\n\r\n    getBearingToNeighbors(neighbor: Location[]) {\r\n        return neighbor.map(this.getBearingTo);\r\n    }\r\n\r\n    updateCalibration = async (camera) => {\r\n        const payload = {\r\n            \"calibration\": -camera.rotation.y\r\n        }\r\n        //await api.updateCalibrationById(this.id,payload).then(res=>{\r\n        alert(\"Update Calibration is disabled at this moment!\");\r\n        //})\r\n    }\r\n}\r\n\r\nexport { Location }\r\n","import * as THREE from \"three\"\r\n\r\nclass Cylinder{\r\n    //Members\r\n    mesh: THREE.Mesh;\r\n    material: THREE.MeshBasicMaterial;\r\n    geometry: THREE.CylinderBufferGeometry;\r\n    texture: THREE.Texture;\r\n    loader: THREE.TextureLoader;\r\n\r\n    constructor(){\r\n        this.geometry = new THREE.CylinderBufferGeometry(20, 20, 15, 100, 1, true);\r\n        this.texture = new THREE.Texture();\r\n        this.loader = new THREE.TextureLoader();\r\n        this.material = new THREE.MeshBasicMaterial();\r\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\r\n    }\r\n    \r\n    LoadPanoTexture(fname:string, onComplete:Function){\r\n        this.texture = this.loader.load(process.env.PUBLIC_URL + 'resource/'+fname, undefined, undefined, err => {\r\n            console.error(err)\r\n        });\r\n    }\r\n}\r\n\r\nclass Arrow{\r\n    //Members\r\n    mesh: THREE.Mesh;\r\n    material: THREE.MeshBasicMaterial;\r\n    geometry: THREE.ConeBufferGeometry;\r\n    id: string\r\n\r\n    constructor(){\r\n        this.geometry = new THREE.ConeBufferGeometry(0.2,1,16);\r\n        this.material = new THREE.MeshBasicMaterial({color:\"white\"})\r\n        this.mesh = new THREE.Mesh(this.geometry,this.material);\r\n    }\r\n    onClickHandler(){\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport{Arrow, Cylinder}\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Rings = styled.div`\r\n\t&,\r\n\t&:after {\r\n\t\tborder-radius: 50%;\r\n\t\twidth: ${({ width = \"48\" }) => width}px;\r\n\t\theight: ${({ width = \"48\" }) => width}px;\r\n\t}\r\n\t& {\r\n\t\tmargin: 60px auto;\r\n\t\tfont-size: 10px;\r\n\t\tposition: relative;\r\n\t\ttext-indent: -9999em;\r\n\t\tborder-top: 1.1em solid rgba(0, 0, 0, 0.1);\r\n\t\tborder-right: 1.1em solid rgba(0, 0, 0, 0.1);\r\n\t\tborder-bottom: 1.1em solid rgba(0, 0, 0, 0.1);\r\n\t\tborder-left: 1.1em solid ${({ color = \"#ea6c2f\" }) => color};\r\n\t\t-webkit-transform: translateZ(0);\r\n\t\t-ms-transform: translateZ(0);\r\n\t\ttransform: translateZ(0);\r\n\t\t-webkit-animation: load8 1.1s infinite linear;\r\n\t\tanimation: load8 1.1s infinite linear;\r\n\t}\r\n\t@-webkit-keyframes load8 {\r\n\t\t0% {\r\n\t\t\t-webkit-transform: rotate(0deg);\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\t-webkit-transform: rotate(360deg);\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n\t@keyframes load8 {\r\n\t\t0% {\r\n\t\t\t-webkit-transform: rotate(0deg);\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\t-webkit-transform: rotate(360deg);\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport default Rings;\r\n","import React, { Component, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Canvas, useThree, useRender } from \"react-three-fiber\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport SVGLoader from \"three-svg-loader\";\r\n\r\nimport \"./style/pano.css\";\r\nimport { Location } from \"./geo\";\r\nimport { Arrow, Cylinder } from \"./shapes\";\r\nimport Spinner from \"./components/spinner\";\r\nimport { Triangle } from \"three\";\r\n//import OrbitControls from 'three-orbitcontrols'\r\n\r\nconst TWEEN = require(\"@tweenjs/tween.js\");\r\n\r\ninterface PanoProps extends RouteComponentProps<{ id?: string }> {\r\n\tlid: string;\r\n}\r\n\r\ntype PanoState = { isLoading: boolean };\r\ntype NeighborType = {\r\n\tlocation: Location;\r\n\tdistance: number;\r\n\tbearing: number;\r\n};\r\n\r\nclass Pano extends Component<PanoProps, PanoState> {\r\n\t//Members\r\n\tcurrLoc: Location;\r\n\tneighbors: Map<string, NeighborType>;\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: true\r\n\t\t};\r\n\t\tthis.RenderPano = this.RenderPano.bind(this);\r\n\t}\r\n\t\r\n\tget panoId() {\r\n\t\t// @ts-ignore\r\n\t\treturn this.props.match.params.id || \"20190724151553\";\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tvar setCurrLocAndNeighbors = async () => {\r\n\t\t\t//setCurrLoc\r\n\t\t\tthis.currLoc = new Location(this.panoId);\r\n\t\t\tawait this.currLoc.setAllAttr().then(() => {\r\n\t\t\t\tthis.loadTexture();\r\n\t\t\t});\r\n\r\n\t\t\t//setNeighbors\r\n\t\t\tthis.neighbors = new Map();\r\n\t\t\tthis.setNeighbors();\r\n\t\t};\r\n\t\tsetCurrLocAndNeighbors();\r\n\t}\r\n\r\n\tasync setNeighbors() {//Only supports two neighbors for now\r\n        this.neighbors.clear();//Purge previous neighbors\r\n\t\tawait this.currLoc.getNeighborIds();\r\n\t\tlet nidArr = this.currLoc.neighborArr;\r\n\t\tif((nidArr as any).length===0){\r\n\t\t\tconsole.log(\"No neighbors discorvered...\");\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tfor(let nid of nidArr as any){\r\n\t\t\t\tlet nextLoc = new Location(nid);\r\n\t\t\t\tawait nextLoc.setAllAttr().then(() => {\r\n\t\t\t\t\tthis.addNeighbor(nextLoc);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\taddNeighbor(n: Location) {\r\n\t\tthis.neighbors.set(n.id, {\r\n\t\t\tlocation: n,\r\n\t\t\tdistance: this.currLoc.getDistanceTo(n),\r\n\t\t\tbearing: this.currLoc.getBearingTo(n)\r\n\t\t});\r\n\t}\r\n\r\n\t//THREEjs objects\r\n\tcylindergeometry = new THREE.CylinderBufferGeometry(20, 20, 15, 100, 1, true);\r\n\tcylindermaterial = undefined;\r\n\tcylindermesh = undefined;\r\n\ttexture = undefined;\r\n\tloader = new THREE.TextureLoader();\r\n    lines = [];\r\n    \r\n    tempcylindergeometry = new THREE.CylinderBufferGeometry(21, 21, 15, 100, 1, true);\r\n\ttempcylindermaterial = undefined;\r\n    tempcylindermesh = undefined;\r\n\r\n\r\n\tloadTexture() {\r\n\t\tthis.texture = this.loader.load(\r\n\t\t\trequire(`./assets/viewPano/resource/${this.currLoc.fname}`),\r\n\t\t\t() => {\r\n\t\t\t\tthis.setState({ isLoading: false });\r\n\t\t\t},\r\n\t\t\tundefined,\r\n\t\t\terr => {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tthis.cylindermaterial = new THREE.MeshBasicMaterial({\r\n\t\t\tmap: this.texture,\r\n\t\t\tside: THREE.DoubleSide\r\n\t\t});\r\n\t\tthis.cylindermesh = new THREE.Mesh(\r\n\t\t\tthis.cylindergeometry,\r\n\t\t\tthis.cylindermaterial\r\n\t\t);\r\n\t\tthis.cylindergeometry.scale(-1, 1, 1);\r\n\t\t//this.cylindermesh.position.y = 0\r\n        this.cylindermesh.rotation.y = this.currLoc.calibration;\r\n\t}\r\n\r\n\t/*\r\n\tInitNeighborPins() {\r\n\t\tconsole.log(this.lines);\r\n\t\tif (this.lines.length !== 0) {\r\n\t\t\tthis.lines = [];\r\n\t\t}\r\n\t\tthis.neighbors.forEach((loc, id) => {\r\n\t\t\tlet bearing = loc.bearing;\r\n\t\t\tlet line = new THREE.LineBasicMaterial({ color: \"blue\" });\r\n\t\t\tlet geometry = new THREE.Geometry();\r\n\t\t\tgeometry.vertices.push(new THREE.Vector3(0, -5, 0));\r\n\t\t\tgeometry.vertices.push(\r\n\t\t\t\tnew THREE.Vector3(\r\n\t\t\t\t\t20 * Math.sin((bearing * Math.PI) / 180),\r\n\t\t\t\t\t-5,\r\n\t\t\t\t\t-20 * Math.cos((bearing * Math.PI) / 180)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tthis.lines.push(new THREE.Line(geometry, line));\r\n\t\t});\r\n\t}*/\r\n\r\n\tCameraLookNorth(camera) {\r\n\t\tvar rotBegin = {\r\n\t\t\tat: camera.rotation.y\r\n\t\t};\r\n\t\tvar rotEnd = {\r\n\t\t\tat: 0\r\n\t\t};\r\n\t\tvar tweenRot = new TWEEN.Tween(rotBegin)\r\n\t\t\t.to(rotEnd, 750)\r\n\t\t\t.easing(TWEEN.Easing.Quadratic.InOut);\r\n\t\ttweenRot.onUpdate(function() {\r\n\t\t\tcamera.rotation.y = rotBegin.at;\r\n\t\t});\r\n\t\ttweenRot.onComplete(() => {\r\n\t\t\tcamera.rotation.y = 0;\r\n\t\t});\r\n\t\ttweenRot.start();\r\n\t}\r\n\r\n\tRenderPano() {\r\n\t\tvar mainCam = useRef();\r\n\t\tvar { gl, camera, canvas, scene } = useThree();\r\n\t\t(camera as any).fov = 40;\r\n\t\t//gl.setSize(window.innerWidth, window.innerHeight);\r\n\t\tgl.setSize(canvas.clientWidth, canvas.clientHeight);\r\n\t\t\r\n\t\tcamera.position.set(0, 0, 0);\r\n\t\tcamera.lookAt(0, 0, 0);\r\n\t\t//canvas.width  = canvas.clientWidth;\r\n\t\t//canvas.height = canvas.clientHeight;\r\n\t\t//gl.setViewport(0, 0, canvas.clientWidth, canvas.clientHeight);\r\n\t\t/*var controls = new OrbitControls( camera, gl.domElement );\r\n\t\tcontrols.update();\r\n\t\tcontrols.touches = {\r\n\t\t\tONE: THREE.TOUCH.ROTATE,\r\n\t\t\tTWO: THREE.TOUCH.DOLLY_PAN\r\n\t\t}\r\n\t\tcontrols.mouseButtons = {\r\n\t\t\tLEFT: THREE.MOUSE.ROTATE,\r\n\t\t\tMIDDLE: THREE.MOUSE.DOLLY,\r\n\t\t\tRIGHT: THREE.MOUSE.PAN\r\n\t\t}*/\r\n\r\n\t\tlet cone = new Arrow();\r\n\t\tvar conemesh = useRef();\r\n\t\tvar conemesh1 = useRef();\r\n\t\tvar n0, n1;\r\n\r\n\t\t// Mouse drag rotation controls\r\n\t\tvar mouseDown = false,\r\n\t\t\tmouseX = 0,\r\n\t\t\tmouseY = 0;\r\n\r\n\t\tfunction onMouseMove(evt) {\r\n\t\t\tif (!mouseDown) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tevt.preventDefault();\r\n\t\t\tvar deltaX = evt.clientX - mouseX,\r\n\t\t\t\tdeltaY = evt.clientY - mouseY;\r\n\t\t\tmouseX = evt.clientX;\r\n\t\t\tmouseY = evt.clientY;\r\n\r\n\t\t\trotateScene(deltaX);\r\n\t\t}\r\n\r\n\t\tfunction onMouseDown(evt) {\r\n\t\t\tevt.preventDefault();\r\n\t\t\tmouseDown = true;\r\n\t\t\tmouseX = evt.clientX;\r\n\t\t\tmouseY = evt.clientY;\r\n\t\t}\r\n\r\n\t\tfunction onMouseUp(evt) {\r\n\t\t\tevt.preventDefault();\r\n\t\t\tmouseDown = false;\r\n\t\t}\r\n\r\n\t\t//Touch rotation control\r\n\t\tvar startX = 0;\r\n\r\n\t\tfunction onTouchStart(event) {\r\n\t\t\tstartX = (event.targetTouches[0].pageX);\r\n\t\t}\r\n\r\n\t\tfunction onTouchMove(event) {\r\n\t\t\tvar deltaX = (event.targetTouches[0].pageX - startX);\r\n\t\t\tstartX = (event.targetTouches[0].pageX);\r\n\t\t\trotateScene(deltaX);\r\n\t\t}\r\n\r\n\t\t//Mouse wheel rotation control\r\n\t\tfunction onScroll(event) {\r\n\t\t\tvar deltaY = event.wheelDeltaY / 3;\r\n\t\t\trotateScene(deltaY);\r\n        }\r\n        \r\n\t\tfunction rotateScene(deltaX) {\r\n            console.log(camera.rotation.y);\r\n\t\t\tcamera.rotation.y += deltaX / 1000;\r\n\t\t\tcamera.rotation.y %= 2 * Math.PI;\r\n\t\t}\r\n\t\t\r\n\t\tfunction onWindowResize(){\r\n\t\t\tgl.setSize( canvas.clientWidth, canvas.clientHeight );\r\n\t\t\t(camera as any).aspect = window.innerWidth / window.innerHeight;\r\n\t\t\t(camera as any).updateProjectionMatrix();\r\n\t\t}\r\n\t\tcanvas.addEventListener(\"mousemove\", e => onMouseMove(e), false);\r\n\t\tcanvas.addEventListener(\"mousedown\", e => onMouseDown(e), false);\r\n\t\tcanvas.addEventListener(\"mouseup\", e => onMouseUp(e), false);\r\n\t\twindow.addEventListener(\"mousewheel\", e => onScroll(e),false);\r\n\t\tcanvas.addEventListener(\"touchmove\", e => onTouchMove(e), false);\r\n\t\tcanvas.addEventListener(\"touchstart\", e => onTouchStart(e), false);\r\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\r\n        \r\n        var fadeTexture = () => {\r\n            var fadeBegin = {\r\n\t\t\t\tat: this.cylindermaterial.opacity\r\n\t\t\t};\r\n\t\t\tvar fadeEnd = {\r\n\t\t\t\tat: 0.1\r\n\t\t\t};\r\n\t\t\tvar crossfade = new TWEEN.Tween(fadeBegin)\r\n\t\t\t\t.to(fadeEnd, 500)\r\n\t\t\t\t.easing(TWEEN.Easing.Quadratic.InOut);\r\n\t\t\tcrossfade.onUpdate(() => {\r\n                //console.log(this.cylindermaterial);\r\n\t\t\t\tthis.cylindermaterial.opacity = fadeBegin.at;\r\n\t\t\t});\r\n\t\t\tcrossfade.onComplete(() => {\r\n                this.cylindermaterial.opacity = 1.0;\r\n                this.cylindermaterial.transparent = false;\r\n            });\r\n            this.cylindermaterial.transparent = true;\r\n            crossfade.start();\r\n        }\r\n\r\n\t\tvar animateTransition = id => {\r\n            //Set up parameters for TWEEN animations\r\n\t\t\tconst depth = 15.5;\r\n\t\t\tconst resFov = 75;\r\n\t\t\tconst camAt = (this.neighbors.get(id).bearing * Math.PI) / 180;\r\n\t\t\tvar endAt = (-this.neighbors.get(id).bearing * Math.PI) / 180;\r\n\t\t\tif (camera.rotation.y > 0) {\r\n\t\t\t\tendAt = 2 * Math.PI - (this.neighbors.get(id).bearing * Math.PI) / 180;\r\n\t\t\t}\r\n\t\t\tif(camera.rotation.y-endAt >= Math.PI && camera.rotation.y-endAt<2*Math.PI){\r\n\t\t\t\tendAt += 2 * Math.PI; \r\n\t\t\t}else if( camera.rotation.y-endAt <= -Math.PI && camera.rotation.y-endAt< -2*Math.PI){\r\n\t\t\t\tendAt = - 2 * Math.PI + endAt;\r\n\t\t\t}\r\n\t\t\tvar rotBegin = {\r\n\t\t\t\tat: (camera as any).rotation.y\r\n\t\t\t};\r\n\t\t\tvar rotEnd = {\r\n\t\t\t\tat: endAt\r\n\t\t\t};\r\n\t\t\tvar tweenRot = new TWEEN.Tween(rotBegin)\r\n\t\t\t\t.to(rotEnd, 500)\r\n\t\t\t\t.easing(TWEEN.Easing.Quadratic.InOut);\r\n\t\t\ttweenRot.onUpdate(function() {\r\n\t\t\t\t(camera as any).rotation.y = rotBegin.at;\r\n\t\t\t});\r\n\t\t\ttweenRot.onComplete(() => {\r\n\t\t\t\tcamera.rotation.y = (-this.neighbors.get(id).bearing * Math.PI) / 180;\r\n\t\t\t\t\r\n\t\t\t});\r\n\r\n\t\t\tvar zoom = {\r\n\t\t\t\tzVal: (camera as any).position.z,\r\n\t\t\t\txVal: (camera as any).position.x,\r\n                fovValue: (camera as any).fov,\r\n                opacity: this.cylindermaterial.opacity\r\n\t\t\t};\r\n\t\t\tvar zoomEnd = {\r\n\t\t\t\tzVal: -depth * Math.cos(camAt),\r\n\t\t\t\txVal: depth * Math.sin(camAt),\r\n                fovValue: resFov,\r\n                opacity: 0.1\r\n\t\t\t};\r\n\t\t\tvar tweenZoom = new TWEEN.Tween(zoom).to(zoomEnd, 500);\r\n\r\n\t\t\ttweenZoom.onUpdate(() => {\r\n\t\t\t\t(camera as any).position.z = zoom.zVal;\r\n\t\t\t\t(camera as any).position.x = zoom.xVal;\r\n\t\t\t\t(camera as any).fov = zoom.fovValue;\r\n                (camera as any).updateProjectionMatrix();\r\n                this.cylindermaterial.opacity = zoom.opacity;\r\n\t\t\t});\r\n\t\t\ttweenZoom.onComplete(async () => {\r\n                //reset camera zoom and pos\r\n                camera.position.set(0,0,0);\r\n\t\t\t\t//(camera as any).position.z = 0;\r\n\t\t\t\t//(camera as any).position.x = 0;\r\n\t\t\t\t(camera as any).fov = 40;\r\n                (camera as any).updateProjectionMatrix();\r\n                //When animations are completed, textures are swapped\r\n                \r\n                this.cylindermaterial.map = this.texture;\r\n                this.cylindermesh.rotation.y = this.currLoc.calibration;\r\n                this.cylindermaterial.transparent = false;\r\n                this.cylindermaterial.opacity = 1.0;\r\n\r\n                scene.remove(this.tempcylindermesh);\r\n                this.tempcylindermesh.geometry.dispose();\r\n                this.tempcylindermesh.material.dispose();\r\n                this.tempcylindermesh = undefined;\r\n                this.tempcylindergeometry.scale(-1,1,1);\r\n\t\t\t\tawait this.setNeighbors().then(RenderArrows);//.then(()=>{this.InitNeighborPins()});\r\n\t\t\t});\r\n            tweenRot.chain(tweenZoom);\r\n            this.cylindermaterial.transparent = true;\r\n            \r\n\t\t\ttweenRot.start();\r\n\t\t};\r\n        \r\n        scene.add(this.cylindermesh);\r\n\t\t//RenderCompass();\r\n\r\n\t\tvar transitionToScene = async (id) => {\r\n\t\t\tthis.currLoc = this.neighbors.get(id).location;\r\n\t\t\t//await this.currLoc.setAllAttr();\r\n\t\t\tthis.texture = this.loader.load(\r\n\t\t\t\trequire(`./assets/viewPano/resource/${this.currLoc.fname}`),\r\n\t\t\t\t() => {//onComplete\r\n                    this.tempcylindermaterial = new THREE.MeshBasicMaterial({\r\n                        map: this.texture,\r\n                        side: THREE.DoubleSide\r\n                    });\r\n                    this.tempcylindermesh = new THREE.Mesh(\r\n                        this.tempcylindergeometry,\r\n                        this.tempcylindermaterial\r\n                    );\r\n                    this.tempcylindergeometry.scale(-1, 1, 1);\r\n                    this.tempcylindermesh.rotation.y = this.currLoc.calibration;\r\n                    scene.add(this.tempcylindermesh);\r\n\t\t\t\t\tanimateTransition(id);\r\n\t\t\t\t},\r\n\t\t\t\tundefined,\r\n\t\t\t\terr => {\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t};\r\n\t\t//this.InitNeighborPins();\r\n\t\t/*\r\n\t\tfunction RenderCompass() {\r\n\t\t\tvar loader = new SVGLoader();\r\n\t\t\tloader.load(\r\n\t\t\t\trequire(`./assets/viewPano/compass.svg`),\r\n\t\t\t\tfunction(data) {\r\n\t\t\t\t\tvar paths = data.paths;\r\n\t\t\t\t\tfor (var i = 0; i < paths.length; i++) {\r\n\t\t\t\t\t\tvar path = paths[i];\r\n\t\t\t\t\t\tvar material = new THREE.MeshBasicMaterial({\r\n\t\t\t\t\t\t\tcolor: path.color,\r\n\t\t\t\t\t\t\tside: THREE.DoubleSide,\r\n\t\t\t\t\t\t\tdepthWrite: false\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar shapes = path.toShapes(true);\r\n\t\t\t\t\t\tfor (var j = 0; j < shapes.length; j++) {\r\n\t\t\t\t\t\t\tvar shape = shapes[j];\r\n\t\t\t\t\t\t\tvar geometry = new THREE.ShapeBufferGeometry(shape);\r\n\t\t\t\t\t\t\tvar mesh = new THREE.Mesh(geometry, material);\r\n\t\t\t\t\t\t\t(compassGroup.current as any).add(mesh);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//console.log(compassGroup);\r\n\t\t\t\t\t//(compassGroup.current as any).scale.set(13, 13, 13);\r\n\t\t\t\t\tscene.add(compassGroup.current);\r\n\t\t\t\t},\r\n\t\t\t\tundefined,\r\n\t\t\t\tfunction(error) {\r\n\t\t\t\t\tconsole.log(\"Error Loading Compass\");\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t\tRenderCompass();\r\n\t\t*/\r\n\t\tvar RenderArrows = () => {\r\n\t\t\tvar iter = this.neighbors.keys();\r\n\t\t\t//iter.next();\r\n\t\t\tn0 = this.neighbors.get(iter.next().value);\r\n\t\t\tlet cone0 = conemesh.current as any;\r\n\t\t\tlet cone1 = conemesh1.current as any;\r\n\t\t\t//position\r\n\t\t\tcone0.position.z = -Math.cos(n0.bearing * Math.PI / 180);\r\n\t\t\tcone0.position.x = Math.sin(n0.bearing * Math.PI / 180);\r\n\t\t\t//rotation\r\n\t\t\tcone0.rotation.x = -1.5708;\r\n\t\t\tcone0.rotation.z = (-n0.bearing) * Math.PI / 180;\r\n\t\t\tcone1.visible = false;\r\n\t\t\tif(this.neighbors.size>1){\r\n\t\t\t\tn1 = this.neighbors.get(iter.next().value);\r\n\t\t\t\tcone1.visible = true;\r\n\t\t\t\t//position\r\n\t\t\t\tcone1.position.z = -Math.cos(n1.bearing * Math.PI / 180);\r\n\t\t\t\tcone1.position.x = Math.sin(n1.bearing * Math.PI / 180);\r\n\t\t\t\t//rotation\r\n\t\t\t\tcone1.rotation.x = -1.5708;\r\n\t\t\t\tcone1.rotation.z = (-n1.bearing) * Math.PI / 180;\r\n\t\t\t}\r\n\t\t}\r\n        if(conemesh.current&&conemesh1.current){\r\n\t\t\tRenderArrows();\r\n        }\r\n\t\tvar coneGroup = useRef();\r\n\t\tvar compassGroup = useRef();\r\n\t\tvar triGeo = useRef();\r\n\t\tlet triGeoArr = [new THREE.Vector3(0, 1, 0), new THREE.Vector3(-0.6, -1, 0), new THREE.Vector3(0, -0.5, 0), new THREE.Vector3(0.6, -1, 0)];\r\n\t\tif (triGeo.current){\r\n\t\t\t(triGeo.current as any).vertices = triGeoArr;\r\n\t\t\t(triGeo.current as any).faces.push( new THREE.Face3( 0, 1, 2 ) );\r\n\t\t\t(triGeo.current as any).faces.push( new THREE.Face3( 0, 2, 3 ) );\r\n\t\t\t(triGeo.current as any).computeFaceNormals();\r\n\t\t\t(triGeo.current as any).scale(0.3, 0.3, 0.3);\r\n\t\t}\r\n\t\tfunction setChildrenOpacity(group, opc){\r\n\t\t\tfor(let child of group){\r\n\t\t\t\tchild.material.opacity = opc;\r\n\t\t\t}\r\n        }\r\n        \r\n        var testMesh = useRef();\r\n        if(testMesh.current){\r\n            (testMesh.current as any).geometry.scale(2,2,2);\r\n        }\r\n\r\n\t\t\r\n\t\tuseRender(() => {\r\n\t\t\tTWEEN.update();\r\n\t\t\t(coneGroup.current as any).position.set(\r\n\t\t\t\t-13 * Math.sin(camera.rotation.y),\r\n\t\t\t\t-4,\r\n\t\t\t\t-13 * Math.cos(camera.rotation.y)\r\n\t\t\t);\r\n\t\t\t(compassGroup.current as any).position.set(\r\n\t\t\t\t-13 * Math.sin(camera.rotation.y-0.4),\r\n\t\t\t\t-3,\r\n\t\t\t\t-13 * Math.cos(camera.rotation.y-0.4)\r\n\t\t\t);\r\n\t\t\t(compassGroup.current as any).rotation.y=camera.rotation.y;\r\n\t\t\t(compassGroup.current as any).rotation.z=-camera.rotation.y;\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<perspectiveCamera\r\n\t\t\t\t\tref={mainCam}\r\n\t\t\t\t\tfov={45}\r\n\t\t\t\t\taspect={window.innerWidth / window.innerHeight}\r\n\t\t\t\t\tonUpdate={self => self.updateProjectionMatrix()}\r\n\t\t\t\t/>\r\n                \r\n\t\t\t\t<group ref={coneGroup} /*group of arrows */>\r\n\t\t\t\t\t<mesh //First Arrow\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\ttransitionToScene(n0.location.id); /*this.currLoc.updateCalibration(camera)*/\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonPointerOver={e => {(e.object as any).material.opacity=0.7;}}\r\n\t\t\t\t\t\tonPointerOut={e => {(e.object as any).material.opacity=0.5;}}\r\n\t\t\t\t\t\tref={conemesh}\r\n\t\t\t\t\t\tgeometry={cone.geometry}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<meshBasicMaterial attach=\"material\" color=\"white\" opacity={0.5} transparent={true}/>\r\n\t\t\t\t\t</mesh>\r\n\t\t\t\t\t<mesh //Second Arrow\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\ttransitionToScene(n1.location.id);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonPointerOver={e => {(e.object as any).material.opacity=0.7;}}\r\n\t\t\t\t\t\tonPointerOut={e => {(e.object as any).material.opacity=0.5;}}\r\n                        ref={conemesh1}\r\n                        geometry={cone.geometry}\r\n                    >\r\n                        <meshBasicMaterial attach=\"material\" color=\"white\" opacity={0.5} transparent={true}/>\r\n                    </mesh>\r\n                    {/*<mesh //Test mesh\r\n                        onClick={() => fadeTexture()}\r\n\t\t\t\t\t\tonPointerOver={e => {(e.object as any).material.opacity=0.9;}}\r\n\t\t\t\t\t\tonPointerOut={e => {(e.object as any).material.opacity=0.5;}}\r\n                        ref={testMesh}\r\n                        geometry={cone.geometry}\r\n                        position={[8,0,0]}\r\n                        rotation={[1.571,0,0]}\r\n                    >\r\n                        <meshBasicMaterial attach=\"material\" color=\"blue\" opacity={0.5} transparent={true}/>\r\n                    </mesh>*/}\r\n\t\t\t\t</group>\r\n\t\t\t\t<group\r\n\t\t\t\t\tonClick={() => this.CameraLookNorth(camera)}\r\n\t\t\t\t\tonPointerOver={e => {setChildrenOpacity(e.object.children, 0.8);}}\r\n\t\t\t\t\tonPointerOut={e => {setChildrenOpacity(e.object.children, 0.5);}}\r\n\t\t\t\t\tref={compassGroup}\r\n\t\t\t\t>\r\n\t\t\t\t\t<mesh //Compass Plate \r\n\t\t\t\t\t\tposition={[0, 0, 0]}\r\n\t\t\t\t\t\tgeometry={new THREE.CircleGeometry(0.4, 100, 0)}>\r\n\t\t\t\t\t\t<meshBasicMaterial attach=\"material\" color=\"white\" opacity={0.5} transparent={true} />\r\n\t\t\t\t\t</mesh>\r\n\t\t\t\t\t<mesh //Compass North Arrow \r\n\t\t\t\t\t\tposition={[0, 0.03, 0.01]}\r\n\t\t\t\t\t>\t\r\n\t\t\t\t\t\t<geometry \r\n\t\t\t\t\t\t\tattach=\"geometry\"\r\n\t\t\t\t\t\t\tref={triGeo}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<meshBasicMaterial attach=\"material\" color=\"red\" opacity={0.5} transparent={true} />\r\n\t\t\t\t\t</mesh>\r\n\t\t\t\t</group>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\t//TODO: change the pano window render size\r\n\trender() {\r\n\t\tconst { isLoading } = this.state;\r\n\t\treturn isLoading ? (\r\n\t\t\t<div className={\"spinner-container\"}>\r\n\t\t\t\t<Spinner width={100} height={100} />\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<div className=\"Pano-canvas\">\r\n\t\t\t\t<Canvas>\r\n\t\t\t\t\t<this.RenderPano />\r\n\t\t\t\t</Canvas>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(Pano);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n\tHashRouter as Router,\r\n\tRoute,\r\n\tSwitch,\r\n\tNavLink,\r\n\tRedirect\r\n} from \"react-router-dom\";\r\n\r\nimport { Container, Header, Content } from \"./components/layout\";\r\nimport GMap from \"./maps\";\r\nimport Pano from \"./pano\";\r\nimport \"./style/App.css\";\r\n\r\nconst routes = [\r\n\t{\r\n\t\tpath: \"/maps\",\r\n\t\ttitle: \"Pano Maps\"\r\n\t},\r\n\t{\r\n\t\tpath: \"/viewPano\",\r\n\t\ttitle: \"View Pano\"\r\n\t}\r\n];\r\n\r\nexport const Interface: React.FC = () => {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Container>\r\n\t\t\t\t<Header>\r\n\t\t\t\t\t{routes.map(r => (\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tto={r.path}\r\n\t\t\t\t\t\t\tkey={r.path}\r\n\t\t\t\t\t\t\tactiveClassName=\"ir-nav-item__active\"\r\n\t\t\t\t\t\t\tclassName=\"ir-nav-item\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{r.title}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Header>\r\n\t\t\t\t<Content>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path=\"/maps\" component={GMap} />\r\n\t\t\t\t\t\t<Route exact={true} path=\"/viewPano/:id\" component={Pano} />\r\n\t\t\t\t\t\t<Route path=\"/viewPano\" component={Pano} />\r\n\t\t\t\t\t\t<Redirect exact from=\"/\" to=\"maps\" />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Content>\r\n\t\t\t</Container>\r\n\t\t</Router>\r\n\t);\r\n};\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport * as App from './App';\r\n\r\nReactDOM.render(<App.Interface />, document.getElementById('interface'));\r\n\r\n","var map = {\n\t\"./pano-20190724143458-mx.png\": 112,\n\t\"./pano-20190724143833-mx.png\": 113,\n\t\"./pano-20190724145944-mx.png\": 114,\n\t\"./pano-20190724150711-mx.png\": 115,\n\t\"./pano-20190724151238-mx.png\": 116,\n\t\"./pano-20190724151553-mx.png\": 117,\n\t\"./pano-demo.png\": 118,\n\t\"./wall.jpg\": 119\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 58;"],"sourceRoot":""}