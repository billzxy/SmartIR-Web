{"version":3,"sources":["assets/viewPano/resource sync /^/.//.*$","assets/viewPano/resource/pano-20190724143458-mx.png","assets/viewPano/resource/pano-20190724143833-mx.png","assets/viewPano/resource/pano-20190724145944-mx.png","assets/viewPano/resource/pano-20190724150711-mx.png","assets/viewPano/resource/pano-20190724151238-mx.png","assets/viewPano/resource/pano-20190724151553-mx.png","assets/viewPano/resource/pano-demo.png","assets/viewPano/resource/wall.jpg","components/layout.tsx","api/index.ts","maps.tsx","geo.tsx","shapes.tsx","components/spinner.tsx","pano.tsx","App.tsx","index.tsx"],"names":["map","./pano-20190724143458-mx.png","./pano-20190724143833-mx.png","./pano-20190724145944-mx.png","./pano-20190724150711-mx.png","./pano-20190724151238-mx.png","./pano-20190724151553-mx.png","./pano-demo.png","./wall.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","Container","styled","div","_templateObject","Header","_templateObject2","Content","_templateObject3","NAV_BAR_HEIGHT","getDataFromJSON","data","query","i","length","resultArr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","param","value","push","err","return","result","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","apis","getPanoFileNameById","Promise","mockedPanos","getPanoCoordById","getAllPanoIdAndCoord","getPanoAllAttrById","StyledMap","Map","maps_templateObject","maps_templateObject2","MapContainer","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bounds","google","maps","LatLngBounds","state","showComp","_this2","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","api","then","coordArr","lat","coord","lng","setState","coords","stop","apply","arguments","getAllPanoCoords","extend","LatLng","_this3","setBounds","index","react_default","createElement","dist","lid","position","onClick","showComponent","gotoPano","key","history","concat","ref","onMapMounted","zoom","initialCenter","addMarkers","Component","EnhancedMap","GoogleApiWrapper","apiKey","process","withRouter","maps_Container","Location","calibration","fname","setAllAttr","filename","updateCalibration","_ref2","_callee2","camera","_context2","rotation","y","alert","_x","loc","geolib","neighbor","getDistanceTo","getBearingTo","Arrow","mesh","material","geometry","THREE","color","Rings","spinner_templateObject","_ref$width","width","_ref2$width","_ref3","_ref3$color","TWEEN","require","Pano","currLoc","neighbors","cylindergeometry","cylindermaterial","cylindermesh","texture","loader","lines","isLoading","RenderPano","bind","assertThisInitialized","panoId","loadTexture","setCurrLocAndNeighbors","clear","addNeighbor","n","set","location","distance","bearing","_this4","load","console","error","side","scale","_this5","log","forEach","line","vertices","Math","sin","PI","cos","rotBegin","at","tweenRot","Tween","to","easing","Easing","Quadratic","InOut","onUpdate","onComplete","start","_this6","mainCam","useRef","_useThree","useThree","gl","canvas","scene","fov","setSize","window","innerWidth","innerHeight","lookAt","mouseDown","mouseX","onMouseMove","evt","preventDefault","deltaX","clientX","clientY","rotateScene","addEventListener","add","compassGroup","cone","conemesh","coneGroup","useRender","update","current","Fragment","aspect","self","updateProjectionMatrix","CameraLookNorth","attach","className","spinner","height","react_three_fiber_dist","match","params","routes","path","title","ReactDOM","render","react_router_dom","r","activeClassName","react_router","component","GMap","exact","from","document","getElementById"],"mappings":"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","file":"static/js/main.ad572fe1.chunk.js","sourcesContent":["var map = {\n\t\"./pano-20190724143458-mx.png\": 112,\n\t\"./pano-20190724143833-mx.png\": 113,\n\t\"./pano-20190724145944-mx.png\": 114,\n\t\"./pano-20190724150711-mx.png\": 115,\n\t\"./pano-20190724151238-mx.png\": 116,\n\t\"./pano-20190724151553-mx.png\": 117,\n\t\"./pano-demo.png\": 118,\n\t\"./wall.jpg\": 119\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 111;","module.exports = __webpack_public_path__ + \"static/media/pano-20190724143458-mx.072de3d6.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724143833-mx.0732614b.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724145944-mx.0c7531e1.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724150711-mx.f67813cf.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724151238-mx.3f9e7726.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-20190724151553-mx.c1e8bceb.png\";","module.exports = __webpack_public_path__ + \"static/media/pano-demo.5890e08b.png\";","module.exports = __webpack_public_path__ + \"static/media/wall.2b939dad.jpg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const NAV_BAR_HEIGHT = 64;\nexport const NAV_BAR_PADDING = 12;\n\nexport const Container = styled.div`\n\twidth: 100vw;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nexport const Header = styled.div`\n\tposition: fixed;\n\tz-index: 999;\n\ttop: 0;\n\tpadding: ${NAV_BAR_PADDING}px;\n\theight: calc(${NAV_BAR_HEIGHT}px - ${NAV_BAR_PADDING}px * 2);\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tbackground-color: #f8f8f8;\n\twidth: 100%;\n\n\t& .ir-nav-item {\n\t\tmargin-right: 1rem;\n\t\ttext-decoration: none;\n\t\tcolor: rgba(0, 0, 0, 0.6);\n\t}\n\n\t& .ir-nav-item__active {\n\t\tcolor: #ea6c2f;\n\t}\n`;\n\nexport const Content = styled.div`\n\tflex: 1;\n\tpadding: 24px;\n\tpadding-top: ${NAV_BAR_HEIGHT + 24}px;\n`;\n","import axios from 'axios'\nimport mockedPanos from '../mocks/panos.json'\nimport { deprecate } from 'util';\n\n/*\nconst hostname = \"localhost\";\nconst port = \"8080\";\nconst url = 'http://' + hostname + ':' + port + '/api';\n\nconst api = axios.create({\n    baseURL: url,\n})\n\nexport const insertPano = payload => api.post(`/pano`, payload)\nexport const getAllPanos = () => api.get(`/panos/all`)\nexport const deletePanoById = id => api.delete(`/pano/${id}`)\nexport const getPanoById = id => api.get(`/pano/${id}`)\n\nexport const getPanoCoordById = (id) => api.get(`/pano/coord/${id}`)\nexport const getPanoFileNameById = id => api.get(`/pano/fname/${id}`)\nexport const getPanoAllAttrById = (id) => api.get(`/pano/allAttr/${id}`)\nexport const updateCalibrationById = (id, payload) => api.put(`/pano/cal/${id}`, payload)\n*/\n\nfunction getDataFromJSON(data, query, id?){\n    if(!id){//case when api resembles to 'getAllBlaBlah'\n        for(var i=0; i<data.length; i++){\n            var resultArr = [];\n            for(let param of query){\n                resultArr.push(data[i][param]);\n            }\n            return resultArr;\n        }\n    }\n    for(var i=0; i<data.length; i++){//case when api resembles \"getBlahBlahById\"\n        if(data[i][\"id\"]===id){\n            if(query.length===0)//case specific for \"getAllAttrById\"\n                return data[i];\n            var result = {};\n            for(let param of query){\n                result[param]=data[i][param];\n            }\n            return result;\n        }\n    }\n}\n// Should use superagent to mock when we have time\nexport const getPanoCoordById = (id) => Promise.resolve({ data: { data: getDataFromJSON(mockedPanos,[\"coord\"], id) } })\n//export const getAllPanoIdAndCoord = () => Promise.resolve({ data: { data: getDataFromJSON(mockedPanos,[\"id\", \"coord\"]) } })\nexport const getAllPanoIdAndCoord = () => Promise.resolve({ data: { data: mockedPanos } })\nexport const getPanoAllAttrById = (id) => Promise.resolve({ data: { data: getDataFromJSON(mockedPanos,[], id) } })\nexport const getPanoFileNameById = (id) => Promise.resolve({ data: { data:  getDataFromJSON(mockedPanos,[\"filename\"], id) } })\n\n\nconst apis = {\n    //insertPano,\n    //getAllPanos,\n    //deletePanoById,\n    //getPanoById,\n    //updateCalibrationById,\n\n    getPanoFileNameById,\n    getPanoCoordById,\n    getAllPanoIdAndCoord,\n    getPanoAllAttrById\n}\n\nexport default apis","import React, { Component, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport api from \"./api/index\";\n\n// I believe there is a bug of google-maps-react\n// as it does not respect the custom style object you pass\n// in. So we have to use important for now\n// TODO:\n// look for better map candidate\nconst StyledMap = styled(Map)`\n\twidth: 100% !important;\n\theight: 100% !important;\n\tposition: relative !important;\n`;\n\nconst Container = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\n\t& > div {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n`;\n\nexport interface Coordinate {\n\tid: string | number;\n\tlat: number;\n\tlng: number;\n}\nexport interface MapContainerState {\n\tshowComp: boolean;\n\tcoords?: Coordinate[];\n}\n\nexport interface MapContainerProps extends RouteComponentProps {}\n\nclass MapContainer extends Component<MapContainerProps, MapContainerState> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshowComp: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tvar getAllPanoCoords = async () => {\n\t\t\tawait api.getAllPanoIdAndCoord().then(result => {\n\t\t\t\tvar coordArr = [];\n\t\t\t\tlet data = result.data.data;\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\tcoordArr.push({\n\t\t\t\t\t\tid: data[i].id,\n\t\t\t\t\t\tlat: data[i].coord.lat,\n\t\t\t\t\t\tlng: data[i].coord.lng\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t//console.log(data);\n\t\t\t\tthis.setState({\n\t\t\t\t\tcoords: coordArr,\n\t\t\t\t\tshowComp: true\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\tgetAllPanoCoords();\n\t}\n\n\tshowComponent(i) {\n\t\tif (i !== true && i !== false) return;\n\t\tthis.setState({ showComp: i });\n\t}\n\n\tbounds = new (this.props as any).google.maps.LatLngBounds();\n\n\tsetBounds() {\n\t\tfor (var i = 0; i < (this.state as any).coords.length; i++) {\n\t\t\tlet coord = (this.state as any).coords[i];\n\t\t\tthis.bounds.extend(\n\t\t\t\tnew (this.props as any).google.maps.LatLng({\n\t\t\t\t\tlat: coord.lat,\n\t\t\t\t\tlng: coord.lng\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\n\taddMarkers() {\n\t\tthis.setBounds();\n\n\t\t//let map = new Map(this.refs.map,);\n\t\t//(this.props as any).google.maps.fitBounds(this.bounds);\n\t\treturn (this.state as any).coords.map((coord, index) => {\n\t\t\treturn (\n\t\t\t\t<Marker\n\t\t\t\t\tlid={coord.id}\n\t\t\t\t\tposition={{\n\t\t\t\t\t\tlat: coord.lat,\n\t\t\t\t\t\tlng: coord.lng\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\tthis.showComponent(false);\n\t\t\t\t\t\treturn this.gotoPano(e.lid);\n\t\t\t\t\t}}\n\t\t\t\t\tkey={coord.id}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t}\n\t//TODO: make a pano go back to map feature\n\tgotoPano(id) {\n\t\t// @ts-ignore\n\t\tthis.props.history.push(`/viewPano/${id}`);\n\t}\n\n\trender() {\n\t\tconst { showComp } = this.state;\n\t\treturn showComp ? (\n\t\t\t<StyledMap\n\t\t\t\tref={(this.props as any).onMapMounted}\n\t\t\t\tgoogle={(this.props as any).google}\n\t\t\t\tzoom={18}\n\t\t\t\tinitialCenter={{ lat: 42.36, lng: -71.054 }}\n\t\t\t\tbounds={this.bounds}\n\t\t\t>\n\t\t\t\t{this.addMarkers()}\n\t\t\t</StyledMap>\n\t\t) : null;\n\t}\n}\n\nconst EnhancedMap = GoogleApiWrapper({\n\tapiKey: `${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n})(withRouter(MapContainer));\n\n// google-maps-react is making an higher-order-component\n// in a stupid way, as there is no way for us to change\n// the container tag (always div), and the container does not\n// accept className prop, which makes it hard for us to style\nexport default props => (\n\t<Container>\n\t\t<EnhancedMap {...props} />\n\t</Container>\n);\n","import * as geolib from 'geolib'\nimport api from './api/index'\n\nclass Location {\n    //Members\n    coord: {\n        lat: number,\n        lng: number\n    } = { lat: 0, lng: 0 }\n    calibration: number = 0.0;\n    id: string;\n    fname: string = \"\";\n\n    //Methods\n    constructor(id: string) {\n        this.id = id;\n    }\n\n    setAllAttr = async () => {\n        await api.getPanoAllAttrById(this.id).then(result => {\n            this.fname = result.data.data.filename;\n            this.coord.lat = result.data.data.coord.lat;\n            this.coord.lng = result.data.data.coord.lng;\n            this.calibration = result.data.data.calibration;\n        })\n    }\n\n    getDistanceTo(loc: Location) {\n        return geolib.getDistance(this.coord, loc.coord);\n    }\n\n    getDistanceToNeighbors(neighbor: Location[]) {\n        return neighbor.map(this.getDistanceTo);\n    }\n\n    getBearingTo(loc: Location) {\n        return geolib.getRhumbLineBearing(this.coord, loc.coord);\n    }\n\n    getBearingToNeighbors(neighbor: Location[]) {\n        return neighbor.map(this.getBearingTo);\n    }\n\n    updateCalibration = async (camera) => {\n        const payload = {\n            \"calibration\": -camera.rotation.y\n        }\n        //await api.updateCalibrationById(this.id,payload).then(res=>{\n        alert(\"Update Calibration is disabled at this moment!\");\n        //})\n    }\n}\n\nexport { Location }\n","import * as THREE from \"three\"\n\nclass Cylinder{\n    //Members\n    mesh: THREE.Mesh;\n    material: THREE.MeshBasicMaterial;\n    geometry: THREE.CylinderBufferGeometry;\n    texture: THREE.Texture;\n    loader: THREE.TextureLoader;\n\n    constructor(){\n        this.geometry = new THREE.CylinderBufferGeometry(20, 20, 15, 100, 1, true);\n        this.texture = new THREE.Texture();\n        this.loader = new THREE.TextureLoader();\n        this.material = new THREE.MeshBasicMaterial();\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n    }\n    \n    LoadPanoTexture(fname:string, onComplete:Function){\n        this.texture = this.loader.load(process.env.PUBLIC_URL + 'resource/'+fname, undefined, undefined, err => {\n            console.error(err)\n        });\n    }\n}\n\nclass Arrow{\n    //Members\n    mesh: THREE.Mesh;\n    material: THREE.MeshBasicMaterial;\n    geometry: THREE.ConeBufferGeometry;\n    id: string\n\n    constructor(){\n        this.geometry = new THREE.ConeBufferGeometry(1,1,16);\n        this.material = new THREE.MeshBasicMaterial({color:\"white\"})\n        this.mesh = new THREE.Mesh(this.geometry,this.material);\n    }\n    onClickHandler(){\n        \n    }\n\n}\n\nexport{Arrow, Cylinder}\n\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Rings = styled.div`\n\t&,\n\t&:after {\n\t\tborder-radius: 50%;\n\t\twidth: ${({ width = \"48\" }) => width}px;\n\t\theight: ${({ width = \"48\" }) => width}px;\n\t}\n\t& {\n\t\tmargin: 60px auto;\n\t\tfont-size: 10px;\n\t\tposition: relative;\n\t\ttext-indent: -9999em;\n\t\tborder-top: 1.1em solid rgba(0, 0, 0, 0.1);\n\t\tborder-right: 1.1em solid rgba(0, 0, 0, 0.1);\n\t\tborder-bottom: 1.1em solid rgba(0, 0, 0, 0.1);\n\t\tborder-left: 1.1em solid ${({ color = \"#ea6c2f\" }) => color};\n\t\t-webkit-transform: translateZ(0);\n\t\t-ms-transform: translateZ(0);\n\t\ttransform: translateZ(0);\n\t\t-webkit-animation: load8 1.1s infinite linear;\n\t\tanimation: load8 1.1s infinite linear;\n\t}\n\t@-webkit-keyframes load8 {\n\t\t0% {\n\t\t\t-webkit-transform: rotate(0deg);\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\t100% {\n\t\t\t-webkit-transform: rotate(360deg);\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\t@keyframes load8 {\n\t\t0% {\n\t\t\t-webkit-transform: rotate(0deg);\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\t100% {\n\t\t\t-webkit-transform: rotate(360deg);\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n`;\n\nexport default Rings;\n","import React, { Component, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, useThree, useRender } from \"react-three-fiber\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport SVGLoader from \"three-svg-loader\";\n\nimport \"./style/pano.css\";\nimport { Location } from \"./geo\";\nimport { Arrow, Cylinder } from \"./shapes\";\nimport Spinner from \"./components/spinner\";\n\nconst TWEEN = require(\"@tweenjs/tween.js\");\n\ninterface PanoProps extends RouteComponentProps<{ id?: string }> {\n\tlid: string;\n}\n\ntype PanoState = { isLoading: boolean };\ntype NeighborType = {\n\tlocation: Location;\n\tdistance: number;\n\tbearing: number;\n};\n\nclass Pano extends Component<PanoProps, PanoState> {\n\t//Members\n\tcurrLoc: Location;\n\tneighbors: Map<string, NeighborType>;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true\n\t\t};\n\t\tthis.RenderPano = this.RenderPano.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tvar setCurrLocAndNeighbors = async () => {\n\t\t\t//setCurrLoc\n\t\t\tthis.currLoc = new Location(this.panoId);\n\t\t\tawait this.currLoc.setAllAttr().then(() => {\n\t\t\t\tthis.loadTexture();\n\t\t\t});\n\n\t\t\t//setNeighbors\n\t\t\tthis.neighbors = new Map();\n\t\t};\n\t\tsetCurrLocAndNeighbors();\n\t}\n\n\tasync setNeighbors() {\n\t\t//Hardcoded function to test out two panos\n\t\tthis.neighbors.clear(); //Purge previous neighbors\n\t\tvar next;\n\t\tswitch (this.currLoc.id) {\n\t\t\tcase \"20190724143833\":\n\t\t\t\tnext = new Location(\"20190724143458\");\n\t\t\t\tbreak;\n\t\t\tcase \"20190724143458\":\n\t\t\t\tnext = new Location(\"20190724143833\");\n\t\t\t\tbreak;\n\t\t}\n\t\tawait next.setAllAttr().then(() => {\n\t\t\tthis.addNeighbor(next);\n\t\t});\n\t}\n\n\tget panoId() {\n\t\t// @ts-ignore\n\t\treturn this.props.match.params.id || \"20190724151553\";\n\t}\n\n\taddNeighbor(n: Location) {\n\t\tthis.neighbors.set(n.id, {\n\t\t\tlocation: n,\n\t\t\tdistance: this.currLoc.getDistanceTo(n),\n\t\t\tbearing: this.currLoc.getBearingTo(n)\n\t\t});\n\t}\n\n\tcylindergeometry = new THREE.CylinderBufferGeometry(20, 20, 15, 100, 1, true);\n\tcylindermaterial = undefined;\n\tcylindermesh = undefined;\n\ttexture = undefined;\n\tloader = new THREE.TextureLoader();\n\tlines = [];\n\n\tloadTexture() {\n\t\tthis.texture = this.loader.load(\n\t\t\trequire(`./assets/viewPano/resource/${this.currLoc.fname}`),\n\t\t\t() => {\n\t\t\t\tthis.setState({ isLoading: false });\n\t\t\t},\n\t\t\tundefined,\n\t\t\terr => {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t);\n\n\t\tthis.cylindermaterial = new THREE.MeshBasicMaterial({\n\t\t\tmap: this.texture,\n\t\t\tside: THREE.DoubleSide\n\t\t});\n\t\tthis.cylindermesh = new THREE.Mesh(\n\t\t\tthis.cylindergeometry,\n\t\t\tthis.cylindermaterial\n\t\t);\n\t\tthis.cylindergeometry.scale(-1, 1, 1);\n\t\t//this.cylindermesh.position.y = 0\n\t\tthis.cylindermesh.rotation.y = this.currLoc.calibration;\n\t}\n\n\tInitNeighborPins() {\n\t\tconsole.log(this.lines);\n\t\tif (this.lines.length !== 0) {\n\t\t\tthis.lines = [];\n\t\t}\n\t\tthis.neighbors.forEach((loc, id) => {\n\t\t\tlet bearing = loc.bearing;\n\t\t\tlet line = new THREE.LineBasicMaterial({ color: \"blue\" });\n\t\t\tlet geometry = new THREE.Geometry();\n\t\t\tgeometry.vertices.push(new THREE.Vector3(0, -5, 0));\n\t\t\tgeometry.vertices.push(\n\t\t\t\tnew THREE.Vector3(\n\t\t\t\t\t20 * Math.sin((bearing * Math.PI) / 180),\n\t\t\t\t\t-5,\n\t\t\t\t\t-20 * Math.cos((bearing * Math.PI) / 180)\n\t\t\t\t)\n\t\t\t);\n\t\t\tthis.lines.push(new THREE.Line(geometry, line));\n\t\t});\n\t}\n\n\tCameraLookNorth(camera) {\n\t\tvar rotBegin = {\n\t\t\tat: camera.rotation.y\n\t\t};\n\t\tvar rotEnd = {\n\t\t\tat: 0\n\t\t};\n\t\tvar tweenRot = new TWEEN.Tween(rotBegin)\n\t\t\t.to(rotEnd, 750)\n\t\t\t.easing(TWEEN.Easing.Quadratic.InOut);\n\t\ttweenRot.onUpdate(function() {\n\t\t\tcamera.rotation.y = rotBegin.at;\n\t\t});\n\t\ttweenRot.onComplete(() => {\n\t\t\tcamera.rotation.y = 0;\n\t\t});\n\t\ttweenRot.start();\n\t}\n\n\tRenderPano() {\n\t\tvar mainCam = useRef();\n\t\tvar { gl, camera, canvas, scene } = useThree();\n\t\t(camera as any).fov = 40;\n\t\tgl.setSize(window.innerWidth, window.innerHeight);\n\t\tcamera.position.set(0, 0, 0);\n\t\tcamera.lookAt(0, 0, 0);\n\n\t\tvar mouseDown = false,\n\t\t\tmouseX = 0,\n\t\t\tmouseY = 0;\n\n\t\tfunction onMouseMove(evt) {\n\t\t\tif (!mouseDown) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tevt.preventDefault();\n\t\t\tvar deltaX = evt.clientX - mouseX,\n\t\t\t\tdeltaY = evt.clientY - mouseY;\n\t\t\tmouseX = evt.clientX;\n\t\t\tmouseY = evt.clientY;\n\n\t\t\trotateScene(deltaX);\n\t\t}\n\n\t\tfunction onMouseDown(evt) {\n\t\t\tevt.preventDefault();\n\t\t\tmouseDown = true;\n\t\t\tmouseX = evt.clientX;\n\t\t\tmouseY = evt.clientY;\n\t\t}\n\n\t\tfunction onMouseUp(evt) {\n\t\t\tevt.preventDefault();\n\t\t\tmouseDown = false;\n\t\t}\n\t\tcanvas.addEventListener(\"mousemove\", e => onMouseMove(e), false);\n\t\tcanvas.addEventListener(\"mousedown\", e => onMouseDown(e), false);\n\t\tcanvas.addEventListener(\"mouseup\", e => onMouseUp(e), false);\n\t\tfunction rotateScene(deltaX) {\n\t\t\t//console.log(camera.rotation.y);\n\t\t\tcamera.rotation.y += deltaX / 1000;\n\t\t\tcamera.rotation.y %= 2 * Math.PI;\n\t\t}\n\n\t\tvar camZoom = id => {\n\t\t\tconst depth = 15.5;\n\t\t\tconst resFov = 75;\n\t\t\tconst camAt = (this.neighbors.get(id).bearing * Math.PI) / 180;\n\t\t\tvar endAt = (-this.neighbors.get(id).bearing * Math.PI) / 180;\n\t\t\tif (camera.rotation.y > 0) {\n\t\t\t\tendAt = 2 * Math.PI - (this.neighbors.get(id).bearing * Math.PI) / 180;\n\t\t\t}\n\t\t\tvar rotBegin = {\n\t\t\t\tat: (camera as any).rotation.y\n\t\t\t};\n\t\t\tvar rotEnd = {\n\t\t\t\tat: endAt\n\t\t\t};\n\t\t\tvar tweenRot = new TWEEN.Tween(rotBegin)\n\t\t\t\t.to(rotEnd, 500)\n\t\t\t\t.easing(TWEEN.Easing.Quadratic.InOut);\n\t\t\ttweenRot.onUpdate(function() {\n\t\t\t\t(camera as any).rotation.y = rotBegin.at;\n\t\t\t});\n\t\t\ttweenRot.onComplete(() => {\n\t\t\t\tcamera.rotation.y = (-this.neighbors.get(id).bearing * Math.PI) / 180;\n\t\t\t});\n\n\t\t\tvar zoom = {\n\t\t\t\tzVal: (camera as any).position.z,\n\t\t\t\txVal: (camera as any).position.x,\n\t\t\t\tfovValue: (camera as any).fov\n\t\t\t};\n\t\t\tvar zoomEnd = {\n\t\t\t\tzVal: -depth * Math.cos(camAt),\n\t\t\t\txVal: depth * Math.sin(camAt),\n\t\t\t\tfovValue: resFov\n\t\t\t};\n\t\t\tvar tweenZoom = new TWEEN.Tween(zoom).to(zoomEnd, 500);\n\n\t\t\ttweenZoom.onUpdate(function() {\n\t\t\t\t(camera as any).position.z = zoom.zVal;\n\t\t\t\t(camera as any).position.x = zoom.xVal;\n\t\t\t\t(camera as any).fov = zoom.fovValue;\n\t\t\t\t(camera as any).updateProjectionMatrix();\n\t\t\t});\n\t\t\ttweenZoom.onComplete(async () => {\n\t\t\t\t(camera as any).position.z = 0;\n\t\t\t\t(camera as any).position.x = 0;\n\t\t\t\t(camera as any).fov = 40;\n\t\t\t\t(camera as any).updateProjectionMatrix();\n\t\t\t\tthis.cylindermaterial.map = this.texture;\n\t\t\t\t//this.cylindermesh.rotation.y = this.currLoc.calibration\n\t\t\t\t//await this.setNeighbors();//.then(()=>{this.InitNeighborPins()});\n\t\t\t});\n\t\t\ttweenRot.chain(tweenZoom);\n\t\t\ttweenRot.start();\n\t\t};\n\n\t\tscene.add(this.cylindermesh);\n\t\t//RenderCompass();\n\n\t\tvar updateTexture = async () => {\n\t\t\t//TODO: Implement parameter passing\n\t\t\tvar id = \"\";\n\t\t\tswitch (this.currLoc.id) {\n\t\t\t\tcase \"20190724143833\":\n\t\t\t\t\tid = \"20190724143458\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"20190724143458\":\n\t\t\t\t\tid = \"20190724143833\";\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.currLoc = new Location(id);\n\t\t\tawait this.currLoc.setAllAttr();\n\t\t\tthis.texture = this.loader.load(\n\t\t\t\tprocess.env.PUBLIC_URL + \"resource/\" + this.currLoc.fname,\n\t\t\t\t() => {\n\t\t\t\t\tcamZoom(id);\n\t\t\t\t},\n\t\t\t\tundefined,\n\t\t\t\terr => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\t//this.InitNeighborPins();\n\t\t/*\n        var line1 = new THREE.LineBasicMaterial( { color: \"black\" } );\n        var geometry1 = new THREE.Geometry();\n        geometry1.vertices.push(new THREE.Vector3( 0, -5, 0) );\n        geometry1.vertices.push(new THREE.Vector3( 0, -5, -20) );\n        var line2 = new THREE.LineBasicMaterial( { color: \"red\" } );\n        var geometry2 = new THREE.Geometry();\n        geometry2.vertices.push(new THREE.Vector3( 0, -5, 0) );\n        geometry2.vertices.push(new THREE.Vector3( 0, -5, 20) );\n        var southline = new THREE.Line( geometry1, line1 );\n        var northline = new THREE.Line( geometry2, line2 );\n        \n        scene.add( northline );\n        scene.add( southline );\n        //scene.add(this.lines[0]);\n        */\n\t\tvar compassGroup = useRef();\n\t\tfunction RenderCompass() {\n\t\t\tvar loader = new SVGLoader();\n\t\t\tloader.load(\n\t\t\t\tprocess.env.PUBLIC_URL + \"compass.svg\",\n\t\t\t\tfunction(data) {\n\t\t\t\t\tvar paths = data.paths;\n\t\t\t\t\tfor (var i = 0; i < paths.length; i++) {\n\t\t\t\t\t\tvar path = paths[i];\n\t\t\t\t\t\tvar material = new THREE.MeshBasicMaterial({\n\t\t\t\t\t\t\tcolor: path.color,\n\t\t\t\t\t\t\tside: THREE.DoubleSide,\n\t\t\t\t\t\t\tdepthWrite: false\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar shapes = path.toShapes(true);\n\t\t\t\t\t\tfor (var j = 0; j < shapes.length; j++) {\n\t\t\t\t\t\t\tvar shape = shapes[j];\n\t\t\t\t\t\t\tvar geometry = new THREE.ShapeBufferGeometry(shape);\n\t\t\t\t\t\t\tvar mesh = new THREE.Mesh(geometry, material);\n\t\t\t\t\t\t\t(compassGroup.current as any).add(mesh);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//console.log(compassGroup);\n\t\t\t\t\t(compassGroup.current as any).scale.set(13, 13, 13);\n\t\t\t\t\tscene.add(compassGroup.current);\n\t\t\t\t},\n\t\t\t\tundefined,\n\t\t\t\tfunction(error) {\n\t\t\t\t\tconsole.log(\"Error Loading Compass\");\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet cone = new Arrow();\n\t\tvar conemesh = useRef();\n\t\tvar coneGroup = useRef();\n\n\t\tuseRender(() => {\n\t\t\tTWEEN.update();\n\t\t\t(coneGroup.current as any).position.set(\n\t\t\t\t-13 * Math.sin(camera.rotation.y),\n\t\t\t\t-2,\n\t\t\t\t-13 * Math.cos(camera.rotation.y)\n\t\t\t);\n\t\t\t(compassGroup.current as any).position.set(\n\t\t\t\t-13 * Math.sin(camera.rotation.y),\n\t\t\t\t4,\n\t\t\t\t-13 * Math.cos(camera.rotation.y)\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<perspectiveCamera\n\t\t\t\t\tref={mainCam}\n\t\t\t\t\tfov={45}\n\t\t\t\t\taspect={window.innerWidth / window.innerHeight}\n\t\t\t\t\tonUpdate={self => self.updateProjectionMatrix()}\n\t\t\t\t/>\n\t\t\t\t<group ref={coneGroup}>\n\t\t\t\t\t{/*<mesh onClick={updateTexture} position={[0, -6.6, 0]} rotation={[-1.571, 0, 0]}\n                        geometry={new THREE.CircleGeometry(20, 100, 0)}>\n                        <meshBasicMaterial attach=\"material\" color=\"grey\" />\n        </mesh>*/}\n\t\t\t\t\t<mesh\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.CameraLookNorth(\n\t\t\t\t\t\t\t\tcamera\n\t\t\t\t\t\t\t); /*this.currLoc.updateCalibration(camera)*/\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tref={conemesh}\n\t\t\t\t\t\tgeometry={cone.geometry}\n\t\t\t\t\t>\n\t\t\t\t\t\t<meshBasicMaterial attach=\"material\" color=\"white\" />\n\t\t\t\t\t</mesh>\n\t\t\t\t</group>\n\t\t\t\t<group\n\t\t\t\t\tonClick={() => this.CameraLookNorth(camera)}\n\t\t\t\t\tref={compassGroup}\n\t\t\t\t></group>\n\t\t\t</>\n\t\t);\n\t}\n\t//TODO: change the pano window render size\n\trender() {\n\t\tconst { isLoading } = this.state;\n\t\treturn isLoading ? (\n\t\t\t<div className={\"spinner-container\"}>\n\t\t\t\t<Spinner width={100} height={100} />\n\t\t\t</div>\n\t\t) : (\n\t\t\t<div className=\"Pano-canvas\">\n\t\t\t\t<Canvas>\n\t\t\t\t\t<this.RenderPano />\n\t\t\t\t</Canvas>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(Pano);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n\tHashRouter as Router,\n\tRoute,\n\tSwitch,\n\tNavLink,\n\tRedirect\n} from \"react-router-dom\";\n\nimport { Container, Header, Content } from \"./components/layout\";\nimport GMap from \"./maps\";\nimport Pano from \"./pano\";\nimport \"./style/App.css\";\n\nconst routes = [\n\t{\n\t\tpath: \"/maps\",\n\t\ttitle: \"Pano Maps\"\n\t},\n\t{\n\t\tpath: \"/viewPano\",\n\t\ttitle: \"View Pano\"\n\t}\n];\n\nexport const Interface: React.FC = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Container>\n\t\t\t\t<Header>\n\t\t\t\t\t{routes.map(r => (\n\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\tto={r.path}\n\t\t\t\t\t\t\tkey={r.path}\n\t\t\t\t\t\t\tactiveClassName=\"ir-nav-item__active\"\n\t\t\t\t\t\t\tclassName=\"ir-nav-item\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{r.title}\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t))}\n\t\t\t\t</Header>\n\t\t\t\t<Content>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/maps\" component={GMap} />\n\t\t\t\t\t\t<Route exact={true} path=\"/viewPano/:id\" component={Pano} />\n\t\t\t\t\t\t<Route path=\"/viewPano\" component={Pano} />\n\t\t\t\t\t\t<Redirect exact from=\"/\" to=\"maps\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Content>\n\t\t\t</Container>\n\t\t</Router>\n\t);\n};\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport * as App from './App';\n\nReactDOM.render(<App.Interface />, document.getElementById('interface'));\n\n"],"sourceRoot":""}